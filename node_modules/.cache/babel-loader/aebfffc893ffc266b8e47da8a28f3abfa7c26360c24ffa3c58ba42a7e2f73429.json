{"ast":null,"code":"import _objectSpread from\"D:/CODE/covalen-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useMemo}from'react';import{DndContext,closestCenter,KeyboardSensor,PointerSensor,useSensor,useSensors}from'@dnd-kit/core';import{arrayMove,SortableContext,sortableKeyboardCoordinates,verticalListSortingStrategy}from'@dnd-kit/sortable';import{useSortable}from'@dnd-kit/sortable';import{CSS}from'@dnd-kit/utilities';// Composant Task draggable avec dnd-kit\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SortableTaskItem=_ref=>{var _task$fields,_task$fields$find;let{task,onTaskClick}=_ref;const{attributes,listeners,setNodeRef,transform,transition,isDragging}=useSortable({id:task.id});const style={transform:CSS.Transform.toString(transform),transition,opacity:isDragging?0.6:1};return/*#__PURE__*/_jsx(\"div\",{ref:setNodeRef,style:style,className:\"task-item clickable compact grid-task \".concat(isDragging?'dragging':''),onClick:()=>onTaskClick(task),title:\"Glissez pour r\\xE9organiser\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"task-content-compact\",children:[/*#__PURE__*/_jsx(\"span\",_objectSpread(_objectSpread(_objectSpread({className:\"drag-handle enhanced-handle compact-handle\",title:\"R\\xE9organiser\"},attributes),listeners),{},{children:\"\\u22EE\\u22EE\"})),/*#__PURE__*/_jsxs(\"div\",{className:\"task-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"task-number\",children:(_task$fields=task.fields)===null||_task$fields===void 0?void 0:(_task$fields$find=_task$fields.find(f=>f.key==='modelNumber'))===null||_task$fields$find===void 0?void 0:_task$fields$find.value}),/*#__PURE__*/_jsx(\"span\",{className:\"task-name-compact\",children:task.name})]})]})});};// Composant Task simple (sans drag & drop pour comparaison)\nconst TaskItem=_ref2=>{var _task$fields2,_task$fields2$find;let{task,onTaskClick}=_ref2;return/*#__PURE__*/_jsx(\"div\",{className:\"task-item clickable compact grid-task\",onClick:()=>onTaskClick(task),title:\"Cliquez pour voir les d\\xE9tails\",children:/*#__PURE__*/_jsx(\"div\",{className:\"task-content-compact\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"task-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"task-number\",children:(_task$fields2=task.fields)===null||_task$fields2===void 0?void 0:(_task$fields2$find=_task$fields2.find(f=>f.key==='modelNumber'))===null||_task$fields2$find===void 0?void 0:_task$fields2$find.value}),/*#__PURE__*/_jsx(\"span\",{className:\"task-name-compact\",children:task.name})]})})});};// Composant de grille libre pour une catégorie\nconst CategoryFreeGrid=_ref3=>{let{category,tasks,isOpen,isAdminMode,onToggleCategory,onTaskClick,onReorderTasks,searchTerm,gridColumns=4}=_ref3;// Filtrer les tâches localement\nconst filteredTasks=useMemo(()=>{if(!searchTerm)return tasks;const searchLower=searchTerm.toLowerCase();return tasks.filter(task=>{var _task$fields3,_task$fields3$find;const modelNumber=((_task$fields3=task.fields)===null||_task$fields3===void 0?void 0:(_task$fields3$find=_task$fields3.find(f=>f.key==='modelNumber'))===null||_task$fields3$find===void 0?void 0:_task$fields3$find.value)||'';return task.name.toLowerCase().includes(searchLower)||modelNumber.toLowerCase().includes(searchLower)||category.toLowerCase().includes(searchLower);});},[tasks,searchTerm,category]);// Configuration des sensors pour dnd-kit\nconst sensors=useSensors(useSensor(PointerSensor),useSensor(KeyboardSensor,{coordinateGetter:sortableKeyboardCoordinates}));// Gestion du drag end\nconst handleDragEnd=event=>{const{active,over}=event;if(active.id!==(over===null||over===void 0?void 0:over.id)){const oldIndex=filteredTasks.findIndex(task=>task.id===active.id);const newIndex=filteredTasks.findIndex(task=>task.id===over.id);if(oldIndex!==-1&&newIndex!==-1){const reorderedTasks=arrayMove(filteredTasks,oldIndex,newIndex);onReorderTasks(category,reorderedTasks);}}};// Créer une grille simple\nconst createGrid=useMemo(()=>{// Calculer le nombre de lignes nécessaires\nconst taskCount=filteredTasks.length;const rows=Math.max(3,Math.ceil(taskCount/gridColumns));// Minimum 3 lignes\nconst totalCells=rows*gridColumns;// Créer un array pour la grille\nconst grid=Array(totalCells).fill(null);// Placer les tâches dans la grille séquentiellement\nfilteredTasks.forEach((task,index)=>{if(index<totalCells){grid[index]=task;}});return{grid,rows,totalCells};},[filteredTasks,gridColumns]);return/*#__PURE__*/_jsxs(\"div\",{className:\"category-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"category-header \".concat(isAdminMode?'admin-mode':''),onClick:e=>onToggleCategory(category,e),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"category-left\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"category-toggle\",children:isOpen?'▼':'▶'}),/*#__PURE__*/_jsx(\"span\",{className:\"category-name\",children:category}),isAdminMode&&/*#__PURE__*/_jsxs(\"span\",{className:\"task-count\",children:[\"(\",filteredTasks.length,\")\"]})]}),/*#__PURE__*/_jsx(\"span\",{className:\"category-goto\",children:\"\\u2192\"})]}),isOpen&&/*#__PURE__*/_jsx(DndContext,{sensors:sensors,collisionDetection:closestCenter,onDragEnd:handleDragEnd,children:/*#__PURE__*/_jsx(SortableContext,{items:filteredTasks.map(task=>task.id),strategy:verticalListSortingStrategy,children:/*#__PURE__*/_jsx(\"div\",{className:\"tasks-free-grid\",style:{display:'grid',gridTemplateColumns:\"repeat(\".concat(gridColumns,\", 1fr)\"),gap:'8px',padding:'16px'},children:createGrid.grid.map((task,gridPosition)=>/*#__PURE__*/_jsx(\"div\",{className:\"grid-cell\",children:task?/*#__PURE__*/_jsx(SortableTaskItem,{task:task,onTaskClick:onTaskClick}):/*#__PURE__*/_jsx(\"div\",{className:\"empty-grid-cell\"})},\"grid-cell-\".concat(gridPosition)))})})})]});};const DashboardMaison=_ref4=>{let{appData,onTabChange,onTaskSelect,onAdminPanel,isAdminMode,onReorderTasksInCategory}=_ref4;const[categoryStates,setCategoryStates]=useState({});const[searchTerm,setSearchTerm]=useState('');// Données organisées par catégorie\nconst categoriesData=useMemo(()=>{const categories=new Map();Object.keys(appData).forEach(tabName=>{if(tabName!=='Maison'&&tabName!=='Admin'){const tasks=appData[tabName]||[];tasks.forEach(task=>{const categoryName=task.category||'Autres';if(!categories.has(categoryName)){categories.set(categoryName,{name:categoryName,tasks:[]});}categories.get(categoryName).tasks.push(_objectSpread(_objectSpread({},task),{},{tabName}));});}});return Array.from(categories.values()).sort((a,b)=>a.name.localeCompare(b.name));},[appData]);// Filtrage des catégories\nconst filteredCategories=useMemo(()=>{if(!searchTerm)return categoriesData;const searchLower=searchTerm.toLowerCase();return categoriesData.filter(category=>{const categoryMatches=category.name.toLowerCase().includes(searchLower);const hasMatchingTasks=category.tasks.some(task=>{var _task$fields4,_task$fields4$find;const modelNumber=((_task$fields4=task.fields)===null||_task$fields4===void 0?void 0:(_task$fields4$find=_task$fields4.find(f=>f.key==='modelNumber'))===null||_task$fields4$find===void 0?void 0:_task$fields4$find.value)||'';return task.name.toLowerCase().includes(searchLower)||modelNumber.toLowerCase().includes(searchLower);});return categoryMatches||hasMatchingTasks;});},[categoriesData,searchTerm]);const handleToggleCategory=(categoryName,event)=>{event.stopPropagation();setCategoryStates(prev=>_objectSpread(_objectSpread({},prev),{},{[categoryName]:!prev[categoryName]}));};const handleTaskClick=task=>{onTabChange(task.tabName);onTaskSelect(task);};const handleReorderTasks=(categoryName,reorderedTasks)=>{if(onReorderTasksInCategory){var _categoriesData$find;// Trouver les indices des tâches dans le tableau d'origine\nconst originalTasks=((_categoriesData$find=categoriesData.find(cat=>cat.name===categoryName))===null||_categoriesData$find===void 0?void 0:_categoriesData$find.tasks)||[];const sourceIndex=originalTasks.findIndex(task=>task.id===reorderedTasks[0].id);const targetIndex=reorderedTasks.findIndex(task=>task.id===originalTasks[sourceIndex].id);onReorderTasksInCategory(categoryName,sourceIndex,targetIndex);}};const getTotalTaskCount=()=>{return filteredCategories.reduce((total,category)=>total+category.tasks.length,0);};return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-header\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"dashboard-title\",children:\"Covalen\"})}),/*#__PURE__*/_jsx(\"p\",{className:\"welcome-message\",children:\"Bienvenue sur votre tableau de bord centralis\\xE9.\"}),isAdminMode&&/*#__PURE__*/_jsx(\"div\",{className:\"admin-dashboard-section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"admin-banner\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"admin-banner-text\",children:\"Mode Admin Actif sur le Dashboard.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"admin-manage-btn\",onClick:onAdminPanel,children:\"G\\xE9rer les Onglets\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"overview-title\",children:\"Vue d'overview des T\\xE2ches\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-bar\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"search-icon\",children:\"\\uD83D\\uDD0D\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Rechercher une t\\xE2che, cat\\xE9gorie ou num\\xE9ro...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value),className:\"search-input\"}),searchTerm&&/*#__PURE__*/_jsx(\"button\",{className:\"search-clear\",onClick:()=>setSearchTerm(''),title:\"Effacer la recherche\",children:\"\\u2715\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"search-hints\",children:/*#__PURE__*/_jsx(\"span\",{className:\"search-hint\",children:\"\\uD83D\\uDCA1 Affichage en grille simple\"})}),searchTerm&&/*#__PURE__*/_jsx(\"div\",{className:\"search-results-info\",children:filteredCategories.length===0?\"Aucun r\\xE9sultat pour \\\"\".concat(searchTerm,\"\\\"\"):\"\".concat(getTotalTaskCount(),\" t\\xE2che(s) trouv\\xE9e(s) dans \").concat(filteredCategories.length,\" cat\\xE9gorie(s)\")})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"categories-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"tasks-header\",children:/*#__PURE__*/_jsx(\"span\",{className:\"tasks-label\",children:\"T\\xE2ches (Grille Simple)\"})}),filteredCategories.map(category=>{var _categoryStates$categ;return/*#__PURE__*/_jsx(CategoryFreeGrid,{category:category.name,tasks:category.tasks,isOpen:(_categoryStates$categ=categoryStates[category.name])!==null&&_categoryStates$categ!==void 0?_categoryStates$categ:true,isAdminMode:isAdminMode,onToggleCategory:handleToggleCategory,onTaskClick:handleTaskClick,onReorderTasks:handleReorderTasks,searchTerm:searchTerm,gridColumns:4},category.name);}),filteredCategories.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"no-results\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Aucune cat\\xE9gorie ne correspond \\xE0 votre recherche.\"})})]})]})]});};export default DashboardMaison;","map":{"version":3,"names":["React","useState","useMemo","DndContext","closestCenter","KeyboardSensor","PointerSensor","useSensor","useSensors","arrayMove","SortableContext","sortableKeyboardCoordinates","verticalListSortingStrategy","useSortable","CSS","jsx","_jsx","jsxs","_jsxs","SortableTaskItem","_ref","_task$fields","_task$fields$find","task","onTaskClick","attributes","listeners","setNodeRef","transform","transition","isDragging","id","style","Transform","toString","opacity","ref","className","concat","onClick","title","children","_objectSpread","fields","find","f","key","value","name","TaskItem","_ref2","_task$fields2","_task$fields2$find","CategoryFreeGrid","_ref3","category","tasks","isOpen","isAdminMode","onToggleCategory","onReorderTasks","searchTerm","gridColumns","filteredTasks","searchLower","toLowerCase","filter","_task$fields3","_task$fields3$find","modelNumber","includes","sensors","coordinateGetter","handleDragEnd","event","active","over","oldIndex","findIndex","newIndex","reorderedTasks","createGrid","taskCount","length","rows","Math","max","ceil","totalCells","grid","Array","fill","forEach","index","e","collisionDetection","onDragEnd","items","map","strategy","display","gridTemplateColumns","gap","padding","gridPosition","DashboardMaison","_ref4","appData","onTabChange","onTaskSelect","onAdminPanel","onReorderTasksInCategory","categoryStates","setCategoryStates","setSearchTerm","categoriesData","categories","Map","Object","keys","tabName","categoryName","has","set","get","push","from","values","sort","a","b","localeCompare","filteredCategories","categoryMatches","hasMatchingTasks","some","_task$fields4","_task$fields4$find","handleToggleCategory","stopPropagation","prev","handleTaskClick","handleReorderTasks","_categoriesData$find","originalTasks","cat","sourceIndex","targetIndex","getTotalTaskCount","reduce","total","type","placeholder","onChange","target","_categoryStates$categ"],"sources":["D:/CODE/covalen-app/src/components/DashboardMaison_GridFree.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport {\n    DndContext,\n    closestCenter,\n    KeyboardSensor,\n    PointerSensor,\n    useSensor,\n    useSensors,\n} from '@dnd-kit/core';\nimport {\n    arrayMove,\n    SortableContext,\n    sortableKeyboardCoordinates,\n    verticalListSortingStrategy,\n} from '@dnd-kit/sortable';\nimport {\n    useSortable,\n} from '@dnd-kit/sortable';\nimport { CSS } from '@dnd-kit/utilities';\n\n// Composant Task draggable avec dnd-kit\nconst SortableTaskItem = ({ task, onTaskClick }) => {\n    const {\n        attributes,\n        listeners,\n        setNodeRef,\n        transform,\n        transition,\n        isDragging,\n    } = useSortable({ id: task.id });\n\n    const style = {\n        transform: CSS.Transform.toString(transform),\n        transition,\n        opacity: isDragging ? 0.6 : 1,\n    };\n\n    return (\n        <div\n            ref={setNodeRef}\n            style={style}\n            className={`task-item clickable compact grid-task ${isDragging ? 'dragging' : ''}`}\n            onClick={() => onTaskClick(task)}\n            title=\"Glissez pour réorganiser\"\n        >\n            <div className=\"task-content-compact\">\n                <span\n                    className=\"drag-handle enhanced-handle compact-handle\"\n                    title=\"Réorganiser\"\n                    {...attributes}\n                    {...listeners}\n                >\n                    ⋮⋮\n                </span>\n                <div className=\"task-info\">\n                    <span className=\"task-number\">\n                        {task.fields?.find(f => f.key === 'modelNumber')?.value}\n                    </span>\n                    <span className=\"task-name-compact\">\n                        {task.name}\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// Composant Task simple (sans drag & drop pour comparaison)\nconst TaskItem = ({ task, onTaskClick }) => {\n    return (\n        <div\n            className=\"task-item clickable compact grid-task\"\n            onClick={() => onTaskClick(task)}\n            title=\"Cliquez pour voir les détails\"\n        >\n            <div className=\"task-content-compact\">\n                <div className=\"task-info\">\n                    <span className=\"task-number\">\n                        {task.fields?.find(f => f.key === 'modelNumber')?.value}\n                    </span>\n                    <span className=\"task-name-compact\">\n                        {task.name}\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// Composant de grille libre pour une catégorie\nconst CategoryFreeGrid = ({\n    category,\n    tasks,\n    isOpen,\n    isAdminMode,\n    onToggleCategory,\n    onTaskClick,\n    onReorderTasks,\n    searchTerm,\n    gridColumns = 4\n}) => {\n    // Filtrer les tâches localement\n    const filteredTasks = useMemo(() => {\n        if (!searchTerm) return tasks;\n\n        const searchLower = searchTerm.toLowerCase();\n        return tasks.filter(task => {\n            const modelNumber = task.fields?.find(f => f.key === 'modelNumber')?.value || '';\n            return (\n                task.name.toLowerCase().includes(searchLower) ||\n                modelNumber.toLowerCase().includes(searchLower) ||\n                category.toLowerCase().includes(searchLower)\n            );\n        });\n    }, [tasks, searchTerm, category]);\n\n    // Configuration des sensors pour dnd-kit\n    const sensors = useSensors(\n        useSensor(PointerSensor),\n        useSensor(KeyboardSensor, {\n            coordinateGetter: sortableKeyboardCoordinates,\n        })\n    );\n\n    // Gestion du drag end\n    const handleDragEnd = (event) => {\n        const { active, over } = event;\n\n        if (active.id !== over?.id) {\n            const oldIndex = filteredTasks.findIndex(task => task.id === active.id);\n            const newIndex = filteredTasks.findIndex(task => task.id === over.id);\n\n            if (oldIndex !== -1 && newIndex !== -1) {\n                const reorderedTasks = arrayMove(filteredTasks, oldIndex, newIndex);\n                onReorderTasks(category, reorderedTasks);\n            }\n        }\n    };\n\n    // Créer une grille simple\n    const createGrid = useMemo(() => {\n        // Calculer le nombre de lignes nécessaires\n        const taskCount = filteredTasks.length;\n        const rows = Math.max(3, Math.ceil(taskCount / gridColumns)); // Minimum 3 lignes\n        const totalCells = rows * gridColumns;\n\n        // Créer un array pour la grille\n        const grid = Array(totalCells).fill(null);\n\n        // Placer les tâches dans la grille séquentiellement\n        filteredTasks.forEach((task, index) => {\n            if (index < totalCells) {\n                grid[index] = task;\n            }\n        });\n\n        return { grid, rows, totalCells };\n    }, [filteredTasks, gridColumns]);\n\n    return (\n        <div className=\"category-section\">\n            <div\n                className={`category-header ${isAdminMode ? 'admin-mode' : ''}`}\n                onClick={(e) => onToggleCategory(category, e)}\n            >\n                <div className=\"category-left\">\n                    <span className=\"category-toggle\">\n                        {isOpen ? '▼' : '▶'}\n                    </span>\n                    <span className=\"category-name\">{category}</span>\n                    {isAdminMode && (\n                        <span className=\"task-count\">({filteredTasks.length})</span>\n                    )}\n                </div>\n                <span className=\"category-goto\">→</span>\n            </div>\n\n            {isOpen && (\n                <DndContext\n                    sensors={sensors}\n                    collisionDetection={closestCenter}\n                    onDragEnd={handleDragEnd}\n                >\n                    <SortableContext\n                        items={filteredTasks.map(task => task.id)}\n                        strategy={verticalListSortingStrategy}\n                    >\n                        <div\n                            className=\"tasks-free-grid\"\n                            style={{\n                                display: 'grid',\n                                gridTemplateColumns: `repeat(${gridColumns}, 1fr)`,\n                                gap: '8px',\n                                padding: '16px'\n                            }}\n                        >\n                            {createGrid.grid.map((task, gridPosition) => (\n                                <div key={`grid-cell-${gridPosition}`} className=\"grid-cell\">\n                                    {task ? (\n                                        <SortableTaskItem\n                                            task={task}\n                                            onTaskClick={onTaskClick}\n                                        />\n                                    ) : (\n                                        <div className=\"empty-grid-cell\">\n                                            {/* Cellule vide */}\n                                        </div>\n                                    )}\n                                </div>\n                            ))}\n                        </div>\n                    </SortableContext>\n                </DndContext>\n            )}\n        </div>\n    );\n};\n\nconst DashboardMaison = ({\n    appData,\n    onTabChange,\n    onTaskSelect,\n    onAdminPanel,\n    isAdminMode,\n    onReorderTasksInCategory\n}) => {\n    const [categoryStates, setCategoryStates] = useState({});\n    const [searchTerm, setSearchTerm] = useState('');\n\n    // Données organisées par catégorie\n    const categoriesData = useMemo(() => {\n        const categories = new Map();\n\n        Object.keys(appData).forEach(tabName => {\n            if (tabName !== 'Maison' && tabName !== 'Admin') {\n                const tasks = appData[tabName] || [];\n                tasks.forEach(task => {\n                    const categoryName = task.category || 'Autres';\n\n                    if (!categories.has(categoryName)) {\n                        categories.set(categoryName, {\n                            name: categoryName,\n                            tasks: []\n                        });\n                    }\n\n                    categories.get(categoryName).tasks.push({\n                        ...task,\n                        tabName\n                    });\n                });\n            }\n        });\n\n        return Array.from(categories.values())\n            .sort((a, b) => a.name.localeCompare(b.name));\n    }, [appData]);\n\n    // Filtrage des catégories\n    const filteredCategories = useMemo(() => {\n        if (!searchTerm) return categoriesData;\n\n        const searchLower = searchTerm.toLowerCase();\n\n        return categoriesData.filter(category => {\n            const categoryMatches = category.name.toLowerCase().includes(searchLower);\n            const hasMatchingTasks = category.tasks.some(task => {\n                const modelNumber = task.fields?.find(f => f.key === 'modelNumber')?.value || '';\n                return (\n                    task.name.toLowerCase().includes(searchLower) ||\n                    modelNumber.toLowerCase().includes(searchLower)\n                );\n            });\n\n            return categoryMatches || hasMatchingTasks;\n        });\n    }, [categoriesData, searchTerm]);\n\n    const handleToggleCategory = (categoryName, event) => {\n        event.stopPropagation();\n        setCategoryStates(prev => ({\n            ...prev,\n            [categoryName]: !prev[categoryName]\n        }));\n    };\n\n    const handleTaskClick = (task) => {\n        onTabChange(task.tabName);\n        onTaskSelect(task);\n    };\n\n    const handleReorderTasks = (categoryName, reorderedTasks) => {\n        if (onReorderTasksInCategory) {\n            // Trouver les indices des tâches dans le tableau d'origine\n            const originalTasks = categoriesData.find(cat => cat.name === categoryName)?.tasks || [];\n            const sourceIndex = originalTasks.findIndex(task => task.id === reorderedTasks[0].id);\n            const targetIndex = reorderedTasks.findIndex(task => task.id === originalTasks[sourceIndex].id);\n\n            onReorderTasksInCategory(categoryName, sourceIndex, targetIndex);\n        }\n    };\n\n    const getTotalTaskCount = () => {\n        return filteredCategories.reduce((total, category) => total + category.tasks.length, 0);\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard-header\">\n                <h1 className=\"dashboard-title\">Covalen</h1>\n            </div>\n\n            <p className=\"welcome-message\">\n                Bienvenue sur votre tableau de bord centralisé.\n            </p>\n\n            {isAdminMode && (\n                <div className=\"admin-dashboard-section\">\n                    <div className=\"admin-banner\">\n                        <p className=\"admin-banner-text\">Mode Admin Actif sur le Dashboard.</p>\n                        <button className=\"admin-manage-btn\" onClick={onAdminPanel}>\n                            Gérer les Onglets\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            <div className=\"overview-section\">\n                <h2 className=\"overview-title\">Vue d'overview des Tâches</h2>\n\n                <div className=\"search-container\">\n                    <div className=\"search-bar\">\n                        <span className=\"search-icon\">🔍</span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Rechercher une tâche, catégorie ou numéro...\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                            className=\"search-input\"\n                        />\n                        {searchTerm && (\n                            <button\n                                className=\"search-clear\"\n                                onClick={() => setSearchTerm('')}\n                                title=\"Effacer la recherche\"\n                            >\n                                ✕\n                            </button>\n                        )}\n                    </div>\n                    <div className=\"search-hints\">\n                        <span className=\"search-hint\">💡 Affichage en grille simple</span>\n                    </div>\n                    {searchTerm && (\n                        <div className=\"search-results-info\">\n                            {filteredCategories.length === 0\n                                ? `Aucun résultat pour \"${searchTerm}\"`\n                                : `${getTotalTaskCount()} tâche(s) trouvée(s) dans ${filteredCategories.length} catégorie(s)`\n                            }\n                        </div>\n                    )}\n                </div>\n\n                <div className=\"categories-container\">\n                    <div className=\"tasks-header\">\n                        <span className=\"tasks-label\">Tâches (Grille Simple)</span>\n                    </div>\n\n                    {filteredCategories.map(category => (\n                        <CategoryFreeGrid\n                            key={category.name}\n                            category={category.name}\n                            tasks={category.tasks}\n                            isOpen={categoryStates[category.name] ?? true}\n                            isAdminMode={isAdminMode}\n                            onToggleCategory={handleToggleCategory}\n                            onTaskClick={handleTaskClick}\n                            onReorderTasks={handleReorderTasks}\n                            searchTerm={searchTerm}\n                            gridColumns={4}\n                        />\n                    ))}\n\n                    {filteredCategories.length === 0 && (\n                        <div className=\"no-results\">\n                            <p>Aucune catégorie ne correspond à votre recherche.</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardMaison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}