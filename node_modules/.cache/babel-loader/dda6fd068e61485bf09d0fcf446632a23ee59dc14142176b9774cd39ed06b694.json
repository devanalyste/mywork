{"ast":null,"code":"import _objectWithoutProperties from\"D:/CODE/covalen-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";import _toPropertyKey from\"D:/CODE/covalen-app/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js\";import _objectSpread from\"D:/CODE/covalen-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo,useCallback}from'react';import{DndProvider}from'react-dnd';import{HTML5Backend}from'react-dnd-html5-backend';import MenuHaut from'./components/MenuHaut';import MenuGaucheAdjointes from'./components/MenuGaucheAdjointes';import DetailTacheAdjointe from'./components/DetailTacheAdjointe';import PanneauAdmin from'./components/PanneauAdmin';import DashboardMaison from'./components/DashboardMaison_GridFree';import Notification from'./components/Notification';import ConfirmationModale from'./components/ConfirmationModale';import{loadAppDataFromLocalStorage,saveAppDataToLocalStorage}from'./utils/localStorage';import{massiveTestAppData}from'./data/massiveTestData';// Données de test MASSIVES pour stress-test du layout\n// Composant principal de l'application\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const LOCAL_STORAGE_KEY='covalenAppData';// --- États de l'application ---\nconst[appData,setAppData]=useState(()=>loadAppDataFromLocalStorage(LOCAL_STORAGE_KEY,massiveTestAppData));// Utilisation des données massives pour le test\nconst[activeTab,setActiveTab]=useState('Maison');const[activeTask,setActiveTask]=useState(null);const[isAdminMode,setIsAdminMode]=useState(false);const[notification,setNotification]=useState(null);const[categoryStates,setCategoryStates]=useState({});const[modalState,setModalState]=useState({isOpen:false,message:'',onConfirm:()=>{}});// --- Effets ---\n// Sauvegarde les données dans localStorage à chaque modification\n// useEffect(() => {\n//     saveAppDataToLocalStorage(LOCAL_STORAGE_KEY, appData);\n// }, [appData]);\n// Gère la sélection de la tâche active lors du changement d'onglet\nuseEffect(()=>{if(activeTab!=='Maison'&&activeTab!=='Admin'){const tasks=appData[activeTab]||[];if(tasks.length>0){// Si la tâche active n'est plus dans la liste, on sélectionne la première\nif(!activeTask||!tasks.some(t=>t.id===activeTask.id)){setActiveTask(tasks[0]);}}else{setActiveTask(null);}}else{setActiveTask(null);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[activeTab,appData]);// --- Fonctions utilitaires ---\nconst showNotification=useCallback(function(message){let type=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'info';setNotification({message,type});setTimeout(()=>setNotification(null),3000);},[]);// --- Gestion des catégories (menu de gauche) ---\nconst handleToggleCategory=useCallback(category=>{setCategoryStates(prev=>{var _prev$category;return _objectSpread(_objectSpread({},prev),{},{[category]:_objectSpread(_objectSpread({},prev[category]),{},{isOpen:!((_prev$category=prev[category])!==null&&_prev$category!==void 0&&_prev$category.isOpen)})});});},[]);const categorizedTasks=useMemo(()=>{const tasks=appData[activeTab]||[];if(!Array.isArray(tasks))return{};return tasks.reduce((acc,task)=>{const category=task.category||'Autres';if(!acc[category]){var _categoryStates$categ,_categoryStates$categ2;acc[category]={tasks:[],isOpen:(_categoryStates$categ=(_categoryStates$categ2=categoryStates[category])===null||_categoryStates$categ2===void 0?void 0:_categoryStates$categ2.isOpen)!==null&&_categoryStates$categ!==void 0?_categoryStates$categ:true};}acc[category].tasks.push(task);return acc;},{});},[appData,activeTab,categoryStates]);// --- Gestion des onglets ---\nconst handleTabChange=tabName=>{setActiveTab(tabName);if(tabName!=='Admin'){setIsAdminMode(false);// Quitter le mode admin en changeant d'onglet\n}};const handleAdminPanel=()=>{setActiveTab('Admin');setIsAdminMode(true);};const handleExitAdmin=useCallback(()=>{setActiveTab('Maison');setIsAdminMode(false);},[]);const handleSaveData=useCallback(()=>{try{saveAppDataToLocalStorage(LOCAL_STORAGE_KEY,appData);showNotification('Données sauvegardées avec succès !','success');}catch(error){showNotification('Erreur lors de la sauvegarde.','error');}},[appData,showNotification]);const handleAddTab=newTabName=>{if(!newTabName.trim()){showNotification('Le nom de l\\'onglet ne peut pas être vide.','error');return;}setAppData(prev=>{if(prev[newTabName]){showNotification(\"L'onglet '\".concat(newTabName,\"' existe d\\xE9j\\xE0.\"),'error');return prev;}showNotification(\"Onglet '\".concat(newTabName,\"' ajout\\xE9.\"),'success');return _objectSpread(_objectSpread({},prev),{},{[newTabName]:[]});});};const handleRenameTab=(oldTabName,newTabName)=>{if(!newTabName.trim()){showNotification('Le nouveau nom de l\\'onglet ne peut pas être vide.','error');return;}setAppData(prev=>{if(prev[newTabName]&&newTabName!==oldTabName){showNotification(\"Le nom '\".concat(newTabName,\"' est d\\xE9j\\xE0 pris.\"),'error');return prev;}const{[oldTabName]:tabContent}=prev,rest=_objectWithoutProperties(prev,[oldTabName].map(_toPropertyKey));const newAppData=_objectSpread(_objectSpread({},rest),{},{[newTabName]:tabContent});if(activeTab===oldTabName){setActiveTab(newTabName);}showNotification(\"Onglet '\".concat(oldTabName,\"' renomm\\xE9 en '\").concat(newTabName,\"'.\"),'success');return newAppData;});};const confirmDeleteTab=tabNameToDelete=>{setAppData(prev=>{const newData=_objectSpread({},prev);delete newData[tabNameToDelete];return newData;});if(activeTab===tabNameToDelete){setActiveTab('Maison');}showNotification(\"Onglet '\".concat(tabNameToDelete,\"' supprim\\xE9.\"),'success');setModalState({isOpen:false});};const handleDeleteTab=tabNameToDelete=>{setModalState({isOpen:true,message:\"\\xCAtes-vous s\\xFBr de vouloir supprimer l'onglet \\\"\".concat(tabNameToDelete,\"\\\" et toutes ses t\\xE2ches ?\"),onConfirm:()=>confirmDeleteTab(tabNameToDelete)});};// --- Gestion des tâches ---\nconst handleUpdateTask=updatedTask=>{setAppData(prev=>_objectSpread(_objectSpread({},prev),{},{[activeTab]:(prev[activeTab]||[]).map(task=>task.id===updatedTask.id?updatedTask:task)}));};const handleAddTask=(targetTab,newTask)=>{setAppData(prev=>_objectSpread(_objectSpread({},prev),{},{[targetTab]:[...(prev[targetTab]||[]),newTask]}));setActiveTask(newTask);setActiveTab(targetTab);showNotification('Nouvelle tâche ajoutée !','success');};const confirmDeleteTask=taskId=>{let nextTask=null;setAppData(prev=>{const tasks=prev[activeTab]||[];const taskIndex=tasks.findIndex(t=>t.id===taskId);const updatedTasks=tasks.filter(t=>t.id!==taskId);if(updatedTasks.length>0){// Sélectionne la tâche suivante, ou la précédente si c'était la dernière\nnextTask=updatedTasks[taskIndex]||updatedTasks[taskIndex-1]||updatedTasks[0];}return _objectSpread(_objectSpread({},prev),{},{[activeTab]:updatedTasks});});setActiveTask(nextTask);showNotification('Tâche supprimée.','success');setModalState({isOpen:false});};const handleDeleteTask=taskId=>{const taskToDelete=(appData[activeTab]||[]).find(t=>t.id===taskId);if(taskToDelete){setModalState({isOpen:true,message:\"\\xCAtes-vous s\\xFBr de vouloir supprimer la t\\xE2che \\\"\".concat(taskToDelete.name,\"\\\" ?\"),onConfirm:()=>confirmDeleteTask(taskId)});}};const handleReorderTasksInCategory=(category,sourceIndex,targetIndex)=>{// Fonction pour réorganiser l'ordre des tâches dans une catégorie\nconst reorderTasksInTab=(tasks,targetCategory,sIndex,tIndex)=>{const categoryTasks=tasks.filter(t=>(t.category||'Autres')===targetCategory);if(categoryTasks.length<=1||sIndex===tIndex){return tasks;// Pas de changement nécessaire\n}// Réorganiser les tâches de cette catégorie\nconst reorderedTasks=[...categoryTasks];const[removed]=reorderedTasks.splice(sIndex,1);reorderedTasks.splice(tIndex,0,removed);// Remettre les tâches réorganisées dans l'onglet\nconst otherTasks=tasks.filter(t=>(t.category||'Autres')!==targetCategory);return[...otherTasks,...reorderedTasks];};setAppData(prev=>{const updatedData=_objectSpread({},prev);// Appliquer la réorganisation à tous les onglets concernés\nObject.keys(updatedData).forEach(tabName=>{if(tabName!=='Maison'&&tabName!=='Admin'){updatedData[tabName]=reorderTasksInTab(updatedData[tabName]||[],category,sourceIndex,targetIndex);}});return updatedData;});showNotification(\"T\\xE2ches r\\xE9organis\\xE9es dans la cat\\xE9gorie \\\"\".concat(category,\"\\\"\"),'success');};// --- Raccourcis clavier ---\nuseEffect(()=>{const handleKeyPress=e=>{// Ctrl+S pour sauvegarder\nif(e.ctrlKey&&e.key==='s'){e.preventDefault();if(isAdminMode){handleSaveData();}}// Ctrl+/ pour focus sur la recherche (dashboard)\nif(e.ctrlKey&&e.key==='/'){e.preventDefault();if(activeTab==='Maison'){const searchInput=document.querySelector('.search-input');if(searchInput){searchInput.focus();showNotification('Focus sur la recherche','info');}}}// Échap pour sortir du mode admin\nif(e.key==='Escape'&&isAdminMode){handleExitAdmin();showNotification('Mode admin quitté','info');}};document.addEventListener('keydown',handleKeyPress);return()=>document.removeEventListener('keydown',handleKeyPress);},[isAdminMode,activeTab,handleSaveData,handleExitAdmin,showNotification]);return/*#__PURE__*/_jsx(DndProvider,{backend:HTML5Backend,children:/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gray-100 font-sans antialiased flex flex-col\",children:[/*#__PURE__*/_jsx(MenuHaut,{tabs:Object.keys(appData),activeTab:activeTab,onTabClick:handleTabChange,onAdminPanel:handleAdminPanel,onExitAdmin:handleExitAdmin,isAdminMode:isAdminMode,onLogout:()=>showNotification('Fonction de déconnexion à implémenter.','info')}),/*#__PURE__*/_jsxs(\"main\",{className:\"flex flex-1 p-6 max-w-screen-2xl mx-auto w-full overflow-hidden\",children:[activeTab==='Maison'&&/*#__PURE__*/_jsx(DashboardMaison,{appData:appData,onTabChange:handleTabChange,onTaskSelect:setActiveTask,onAdminPanel:handleAdminPanel,isAdminMode:isAdminMode,onReorderTasksInCategory:handleReorderTasksInCategory}),activeTab==='Admin'&&/*#__PURE__*/_jsx(PanneauAdmin,{appData:appData,onAddTab:handleAddTab,onAddTask:handleAddTask,onRenameTab:handleRenameTab,onDeleteTab:handleDeleteTab,onSaveData:handleSaveData,showNotification:showNotification}),activeTab!=='Admin'&&activeTab!=='Maison'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(MenuGaucheAdjointes,{categories:categorizedTasks,onSelectTask:setActiveTask,selectedTask:activeTask,onToggleCategory:handleToggleCategory}),/*#__PURE__*/_jsx(DetailTacheAdjointe,{task:activeTask,onUpdateTask:handleUpdateTask,onAdminModeToggle:setIsAdminMode,isAdminMode:isAdminMode,onDeleteTask:handleDeleteTask,showNotification:showNotification})]})]}),/*#__PURE__*/_jsx(Notification,{message:notification===null||notification===void 0?void 0:notification.message,type:notification===null||notification===void 0?void 0:notification.type,onClose:()=>setNotification(null)}),/*#__PURE__*/_jsx(ConfirmationModale,{isOpen:modalState.isOpen,message:modalState.message,onConfirm:modalState.onConfirm,onCancel:()=>setModalState({isOpen:false})})]})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","DndProvider","HTML5Backend","MenuHaut","MenuGaucheAdjointes","DetailTacheAdjointe","PanneauAdmin","DashboardMaison","Notification","ConfirmationModale","loadAppDataFromLocalStorage","saveAppDataToLocalStorage","massiveTestAppData","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","LOCAL_STORAGE_KEY","appData","setAppData","activeTab","setActiveTab","activeTask","setActiveTask","isAdminMode","setIsAdminMode","notification","setNotification","categoryStates","setCategoryStates","modalState","setModalState","isOpen","message","onConfirm","tasks","length","some","t","id","showNotification","type","arguments","undefined","setTimeout","handleToggleCategory","category","prev","_prev$category","_objectSpread","categorizedTasks","Array","isArray","reduce","acc","task","_categoryStates$categ","_categoryStates$categ2","push","handleTabChange","tabName","handleAdminPanel","handleExitAdmin","handleSaveData","error","handleAddTab","newTabName","trim","concat","handleRenameTab","oldTabName","tabContent","rest","_objectWithoutProperties","map","_toPropertyKey","newAppData","confirmDeleteTab","tabNameToDelete","newData","handleDeleteTab","handleUpdateTask","updatedTask","handleAddTask","targetTab","newTask","confirmDeleteTask","taskId","nextTask","taskIndex","findIndex","updatedTasks","filter","handleDeleteTask","taskToDelete","find","name","handleReorderTasksInCategory","sourceIndex","targetIndex","reorderTasksInTab","targetCategory","sIndex","tIndex","categoryTasks","reorderedTasks","removed","splice","otherTasks","updatedData","Object","keys","forEach","handleKeyPress","e","ctrlKey","key","preventDefault","searchInput","document","querySelector","focus","addEventListener","removeEventListener","backend","children","className","tabs","onTabClick","onAdminPanel","onExitAdmin","onLogout","onTabChange","onTaskSelect","onReorderTasksInCategory","onAddTab","onAddTask","onRenameTab","onDeleteTab","onSaveData","categories","onSelectTask","selectedTask","onToggleCategory","onUpdateTask","onAdminModeToggle","onDeleteTask","onClose","onCancel"],"sources":["D:/CODE/covalen-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport MenuHaut from './components/MenuHaut';\nimport MenuGaucheAdjointes from './components/MenuGaucheAdjointes';\nimport DetailTacheAdjointe from './components/DetailTacheAdjointe';\nimport PanneauAdmin from './components/PanneauAdmin';\nimport DashboardMaison from './components/DashboardMaison_GridFree';\nimport Notification from './components/Notification';\nimport ConfirmationModale from './components/ConfirmationModale';\nimport { loadAppDataFromLocalStorage, saveAppDataToLocalStorage } from './utils/localStorage';\nimport { massiveTestAppData } from './data/massiveTestData'; // Données de test MASSIVES pour stress-test du layout\n\n\n// Composant principal de l'application\nconst App = () => {\n    const LOCAL_STORAGE_KEY = 'covalenAppData';\n\n    // --- États de l'application ---\n    const [appData, setAppData] = useState(() => loadAppDataFromLocalStorage(LOCAL_STORAGE_KEY, massiveTestAppData)); // Utilisation des données massives pour le test\n    const [activeTab, setActiveTab] = useState('Maison');\n    const [activeTask, setActiveTask] = useState(null);\n    const [isAdminMode, setIsAdminMode] = useState(false);\n    const [notification, setNotification] = useState(null);\n    const [categoryStates, setCategoryStates] = useState({});\n    const [modalState, setModalState] = useState({ isOpen: false, message: '', onConfirm: () => { } });\n\n    // --- Effets ---\n    // Sauvegarde les données dans localStorage à chaque modification\n    // useEffect(() => {\n    //     saveAppDataToLocalStorage(LOCAL_STORAGE_KEY, appData);\n    // }, [appData]);\n\n    // Gère la sélection de la tâche active lors du changement d'onglet\n    useEffect(() => {\n        if (activeTab !== 'Maison' && activeTab !== 'Admin') {\n            const tasks = appData[activeTab] || [];\n            if (tasks.length > 0) {\n                // Si la tâche active n'est plus dans la liste, on sélectionne la première\n                if (!activeTask || !tasks.some(t => t.id === activeTask.id)) {\n                    setActiveTask(tasks[0]);\n                }\n            } else {\n                setActiveTask(null);\n            }\n        } else {\n            setActiveTask(null);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [activeTab, appData]);\n\n    // --- Fonctions utilitaires ---\n    const showNotification = useCallback((message, type = 'info') => {\n        setNotification({ message, type });\n        setTimeout(() => setNotification(null), 3000);\n    }, []);\n\n    // --- Gestion des catégories (menu de gauche) ---\n    const handleToggleCategory = useCallback((category) => {\n        setCategoryStates(prev => ({\n            ...prev,\n            [category]: { ...prev[category], isOpen: !prev[category]?.isOpen }\n        }));\n    }, []);\n\n    const categorizedTasks = useMemo(() => {\n        const tasks = appData[activeTab] || [];\n        if (!Array.isArray(tasks)) return {};\n\n        return tasks.reduce((acc, task) => {\n            const category = task.category || 'Autres';\n            if (!acc[category]) {\n                acc[category] = { tasks: [], isOpen: categoryStates[category]?.isOpen ?? true };\n            }\n            acc[category].tasks.push(task);\n            return acc;\n        }, {});\n    }, [appData, activeTab, categoryStates]);\n\n\n    // --- Gestion des onglets ---\n    const handleTabChange = (tabName) => {\n        setActiveTab(tabName);\n        if (tabName !== 'Admin') {\n            setIsAdminMode(false); // Quitter le mode admin en changeant d'onglet\n        }\n    };\n\n    const handleAdminPanel = () => {\n        setActiveTab('Admin');\n        setIsAdminMode(true);\n    };\n\n    const handleExitAdmin = useCallback(() => {\n        setActiveTab('Maison');\n        setIsAdminMode(false);\n    }, []);\n\n    const handleSaveData = useCallback(() => {\n        try {\n            saveAppDataToLocalStorage(LOCAL_STORAGE_KEY, appData);\n            showNotification('Données sauvegardées avec succès !', 'success');\n        } catch (error) {\n            showNotification('Erreur lors de la sauvegarde.', 'error');\n        }\n    }, [appData, showNotification]);\n\n    const handleAddTab = (newTabName) => {\n        if (!newTabName.trim()) {\n            showNotification('Le nom de l\\'onglet ne peut pas être vide.', 'error');\n            return;\n        }\n        setAppData(prev => {\n            if (prev[newTabName]) {\n                showNotification(`L'onglet '${newTabName}' existe déjà.`, 'error');\n                return prev;\n            }\n            showNotification(`Onglet '${newTabName}' ajouté.`, 'success');\n            return { ...prev, [newTabName]: [] };\n        });\n    };\n\n    const handleRenameTab = (oldTabName, newTabName) => {\n        if (!newTabName.trim()) {\n            showNotification('Le nouveau nom de l\\'onglet ne peut pas être vide.', 'error');\n            return;\n        }\n        setAppData(prev => {\n            if (prev[newTabName] && newTabName !== oldTabName) {\n                showNotification(`Le nom '${newTabName}' est déjà pris.`, 'error');\n                return prev;\n            }\n            const { [oldTabName]: tabContent, ...rest } = prev;\n            const newAppData = { ...rest, [newTabName]: tabContent };\n\n            if (activeTab === oldTabName) {\n                setActiveTab(newTabName);\n            }\n            showNotification(`Onglet '${oldTabName}' renommé en '${newTabName}'.`, 'success');\n            return newAppData;\n        });\n    };\n\n    const confirmDeleteTab = (tabNameToDelete) => {\n        setAppData(prev => {\n            const newData = { ...prev };\n            delete newData[tabNameToDelete];\n            return newData;\n        });\n        if (activeTab === tabNameToDelete) {\n            setActiveTab('Maison');\n        }\n        showNotification(`Onglet '${tabNameToDelete}' supprimé.`, 'success');\n        setModalState({ isOpen: false });\n    };\n\n    const handleDeleteTab = (tabNameToDelete) => {\n        setModalState({\n            isOpen: true,\n            message: `Êtes-vous sûr de vouloir supprimer l'onglet \"${tabNameToDelete}\" et toutes ses tâches ?`,\n            onConfirm: () => confirmDeleteTab(tabNameToDelete)\n        });\n    };\n\n    // --- Gestion des tâches ---\n    const handleUpdateTask = (updatedTask) => {\n        setAppData(prev => ({\n            ...prev,\n            [activeTab]: (prev[activeTab] || []).map(task =>\n                task.id === updatedTask.id ? updatedTask : task\n            )\n        }));\n    };\n\n    const handleAddTask = (targetTab, newTask) => {\n        setAppData(prev => ({\n            ...prev,\n            [targetTab]: [...(prev[targetTab] || []), newTask]\n        }));\n        setActiveTask(newTask);\n        setActiveTab(targetTab);\n        showNotification('Nouvelle tâche ajoutée !', 'success');\n    };\n\n    const confirmDeleteTask = (taskId) => {\n        let nextTask = null;\n        setAppData(prev => {\n            const tasks = prev[activeTab] || [];\n            const taskIndex = tasks.findIndex(t => t.id === taskId);\n            const updatedTasks = tasks.filter(t => t.id !== taskId);\n\n            if (updatedTasks.length > 0) {\n                // Sélectionne la tâche suivante, ou la précédente si c'était la dernière\n                nextTask = updatedTasks[taskIndex] || updatedTasks[taskIndex - 1] || updatedTasks[0];\n            }\n\n            return { ...prev, [activeTab]: updatedTasks };\n        });\n        setActiveTask(nextTask);\n        showNotification('Tâche supprimée.', 'success');\n        setModalState({ isOpen: false });\n    };\n\n    const handleDeleteTask = (taskId) => {\n        const taskToDelete = (appData[activeTab] || []).find(t => t.id === taskId);\n        if (taskToDelete) {\n            setModalState({\n                isOpen: true,\n                message: `Êtes-vous sûr de vouloir supprimer la tâche \"${taskToDelete.name}\" ?`,\n                onConfirm: () => confirmDeleteTask(taskId)\n            });\n        }\n    };\n\n    const handleReorderTasksInCategory = (category, sourceIndex, targetIndex) => {\n        // Fonction pour réorganiser l'ordre des tâches dans une catégorie\n        const reorderTasksInTab = (tasks, targetCategory, sIndex, tIndex) => {\n            const categoryTasks = tasks.filter(t => (t.category || 'Autres') === targetCategory);\n\n            if (categoryTasks.length <= 1 || sIndex === tIndex) {\n                return tasks; // Pas de changement nécessaire\n            }\n\n            // Réorganiser les tâches de cette catégorie\n            const reorderedTasks = [...categoryTasks];\n            const [removed] = reorderedTasks.splice(sIndex, 1);\n            reorderedTasks.splice(tIndex, 0, removed);\n\n            // Remettre les tâches réorganisées dans l'onglet\n            const otherTasks = tasks.filter(t => (t.category || 'Autres') !== targetCategory);\n            return [...otherTasks, ...reorderedTasks];\n        };\n\n        setAppData(prev => {\n            const updatedData = { ...prev };\n\n            // Appliquer la réorganisation à tous les onglets concernés\n            Object.keys(updatedData).forEach(tabName => {\n                if (tabName !== 'Maison' && tabName !== 'Admin') {\n                    updatedData[tabName] = reorderTasksInTab(\n                        updatedData[tabName] || [],\n                        category,\n                        sourceIndex,\n                        targetIndex\n                    );\n                }\n            });\n\n            return updatedData;\n        });\n\n        showNotification(`Tâches réorganisées dans la catégorie \"${category}\"`, 'success');\n    };\n\n    // --- Raccourcis clavier ---\n    useEffect(() => {\n        const handleKeyPress = (e) => {\n            // Ctrl+S pour sauvegarder\n            if (e.ctrlKey && e.key === 's') {\n                e.preventDefault();\n                if (isAdminMode) {\n                    handleSaveData();\n                }\n            }\n\n            // Ctrl+/ pour focus sur la recherche (dashboard)\n            if (e.ctrlKey && e.key === '/') {\n                e.preventDefault();\n                if (activeTab === 'Maison') {\n                    const searchInput = document.querySelector('.search-input');\n                    if (searchInput) {\n                        searchInput.focus();\n                        showNotification('Focus sur la recherche', 'info');\n                    }\n                }\n            }\n\n            // Échap pour sortir du mode admin\n            if (e.key === 'Escape' && isAdminMode) {\n                handleExitAdmin();\n                showNotification('Mode admin quitté', 'info');\n            }\n        };\n\n        document.addEventListener('keydown', handleKeyPress);\n        return () => document.removeEventListener('keydown', handleKeyPress);\n    }, [isAdminMode, activeTab, handleSaveData, handleExitAdmin, showNotification]);\n\n    return (\n        <DndProvider backend={HTML5Backend}>\n            <div className=\"min-h-screen bg-gray-100 font-sans antialiased flex flex-col\">\n                <MenuHaut\n                    tabs={Object.keys(appData)}\n                    activeTab={activeTab}\n                    onTabClick={handleTabChange}\n                    onAdminPanel={handleAdminPanel}\n                    onExitAdmin={handleExitAdmin}\n                    isAdminMode={isAdminMode}\n                    onLogout={() => showNotification('Fonction de déconnexion à implémenter.', 'info')}\n                />\n\n                <main className=\"flex flex-1 p-6 max-w-screen-2xl mx-auto w-full overflow-hidden\">\n                    {activeTab === 'Maison' && (\n                        <DashboardMaison\n                            appData={appData}\n                            onTabChange={handleTabChange}\n                            onTaskSelect={setActiveTask}\n                            onAdminPanel={handleAdminPanel}\n                            isAdminMode={isAdminMode}\n                            onReorderTasksInCategory={handleReorderTasksInCategory}\n                        />\n                    )}\n\n                    {activeTab === 'Admin' && (\n                        <PanneauAdmin\n                            appData={appData}\n                            onAddTab={handleAddTab}\n                            onAddTask={handleAddTask}\n                            onRenameTab={handleRenameTab}\n                            onDeleteTab={handleDeleteTab}\n                            onSaveData={handleSaveData}\n                            showNotification={showNotification}\n                        />\n                    )}\n\n                    {activeTab !== 'Admin' && activeTab !== 'Maison' && (\n                        <>\n                            <MenuGaucheAdjointes\n                                categories={categorizedTasks}\n                                onSelectTask={setActiveTask}\n                                selectedTask={activeTask}\n                                onToggleCategory={handleToggleCategory}\n                            />\n                            <DetailTacheAdjointe\n                                task={activeTask}\n                                onUpdateTask={handleUpdateTask}\n                                onAdminModeToggle={setIsAdminMode}\n                                isAdminMode={isAdminMode}\n                                onDeleteTask={handleDeleteTask}\n                                showNotification={showNotification}\n                            />\n                        </>\n                    )}\n                </main>\n\n                <Notification\n                    message={notification?.message}\n                    type={notification?.type}\n                    onClose={() => setNotification(null)}\n                />\n\n                <ConfirmationModale\n                    isOpen={modalState.isOpen}\n                    message={modalState.message}\n                    onConfirm={modalState.onConfirm}\n                    onCancel={() => setModalState({ isOpen: false })}\n                />\n            </div>\n        </DndProvider>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}