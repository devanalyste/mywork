{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\covalen-app\\\\src\\\\components\\\\DashboardMaison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardMaison = ({\n  appData,\n  onTabChange,\n  onTaskSelect,\n  onAdminPanel,\n  isAdminMode,\n  onMoveTask,\n  onReorderCategories,\n  onReorderTasksInCategory\n}) => {\n  _s();\n  const [categoryStates, setCategoryStates] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [dragOverCategory, setDragOverCategory] = useState(null); // Fonction pour regrouper toutes les tâches par catégorie\n  const getAllTasksByCategory = () => {\n    const allCategories = {};\n\n    // Parcourir tous les onglets sauf 'Maison' et 'Admin'\n    Object.keys(appData).forEach(tabName => {\n      if (tabName !== 'Maison' && tabName !== 'Admin') {\n        const tasks = appData[tabName] || [];\n        tasks.forEach(task => {\n          const category = task.category || 'Autres';\n          if (!allCategories[category]) {\n            allCategories[category] = [];\n          }\n          allCategories[category].push({\n            ...task,\n            tabName\n          });\n        });\n      }\n    });\n    return allCategories;\n  };\n  const allTasksByCategory = getAllTasksByCategory();\n\n  // Filtrer les tâches selon le terme de recherche\n  const filteredCategories = useMemo(() => {\n    if (!searchTerm) return allTasksByCategory;\n    const filtered = {};\n    const searchLower = searchTerm.toLowerCase();\n    const taskMatchesSearch = task => {\n      var _task$fields, _task$fields$find;\n      const modelNumber = ((_task$fields = task.fields) === null || _task$fields === void 0 ? void 0 : (_task$fields$find = _task$fields.find(f => f.key === 'modelNumber')) === null || _task$fields$find === void 0 ? void 0 : _task$fields$find.value) || '';\n      return task.name.toLowerCase().includes(searchLower) || modelNumber.toLowerCase().includes(searchLower);\n    };\n    Object.keys(allTasksByCategory).forEach(category => {\n      const matchingTasks = allTasksByCategory[category].filter(taskMatchesSearch);\n      const categoryMatches = category.toLowerCase().includes(searchLower);\n      if (matchingTasks.length > 0 || categoryMatches) {\n        filtered[category] = matchingTasks;\n      }\n    });\n    return filtered;\n  }, [allTasksByCategory, searchTerm]);\n  const categorizedTasks = filteredCategories;\n\n  // --- Fonctions Drag & Drop ---\n  const handleDragStart = (e, item, type, index = null) => {\n    console.log('🚀 Drag started:', {\n      item,\n      type,\n      index\n    });\n    setDraggedItem({\n      item,\n      type,\n      index\n    });\n    e.dataTransfer.effectAllowed = 'move';\n    e.target.style.opacity = '0.5';\n\n    // Ajouter des données pour le transfert\n    e.dataTransfer.setData('text/plain', JSON.stringify({\n      item,\n      type,\n      index\n    }));\n  };\n  const handleDragEnd = e => {\n    console.log('🏁 Drag ended');\n    e.target.style.opacity = '1';\n    // On ne reset pas draggedItem ici, on le fait seulement après le drop\n    // setDraggedItem(null);\n    setDragOverCategory(null);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleDragEnter = (e, category) => {\n    e.preventDefault();\n    console.log('📥 Drag enter category:', category);\n    setDragOverCategory(category);\n  };\n  const handleDragLeave = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      console.log('📤 Drag leave');\n      setDragOverCategory(null);\n    }\n  };\n  const handleDrop = (e, targetCategory, targetIndex = null) => {\n    e.preventDefault();\n    console.log('🎯 Drop event:', {\n      targetCategory,\n      targetIndex,\n      draggedItem\n    });\n    setDragOverCategory(null);\n\n    // Essayer de récupérer les données depuis le dataTransfer si draggedItem est null\n    let dragData = draggedItem;\n    if (!dragData) {\n      try {\n        const transferData = e.dataTransfer.getData('text/plain');\n        if (transferData) {\n          dragData = JSON.parse(transferData);\n          console.log('📦 Recovered drag data from dataTransfer:', dragData);\n        }\n      } catch (error) {\n        console.log('❌ Failed to parse dataTransfer data:', error);\n      }\n    }\n    if (!dragData) {\n      console.log('❌ No dragged item available');\n      return;\n    }\n    const {\n      item,\n      type,\n      index: sourceIndex\n    } = dragData;\n    if (type === 'task') {\n      const sourceCategory = item.category || 'Autres';\n      console.log('📋 Task drop:', {\n        sourceCategory,\n        targetCategory,\n        sourceIndex,\n        targetIndex\n      });\n      if (targetCategory !== sourceCategory) {\n        // Déplacer la tâche vers une nouvelle catégorie\n        console.log('🔄 Moving task between categories');\n        if (onMoveTask) {\n          onMoveTask(item, targetCategory);\n        }\n      } else if (targetIndex !== null && sourceIndex !== null && sourceIndex !== targetIndex) {\n        // Réorganiser les tâches dans la même catégorie\n        console.log('🔃 Reordering tasks in same category');\n        if (onReorderTasksInCategory) {\n          onReorderTasksInCategory(sourceCategory, sourceIndex, targetIndex);\n        }\n      }\n    } else if (type === 'category' && onReorderCategories) {\n      // Réorganiser les catégories\n      console.log('📂 Reordering categories');\n      onReorderCategories(item, targetCategory);\n    }\n\n    // Reset draggedItem après un petit délai pour s'assurer que le drop est traité\n    setTimeout(() => {\n      setDraggedItem(null);\n    }, 100);\n  };\n  const handleToggleCategory = (category, event) => {\n    event.stopPropagation();\n    setCategoryStates(prev => ({\n      ...prev,\n      [category]: !prev[category]\n    }));\n  };\n  const handleTaskClick = task => {\n    // Naviguer vers l'onglet et sélectionner la tâche\n    onTabChange(task.tabName);\n    onTaskSelect(task);\n  };\n  const getCategoryIcon = isOpen => {\n    return isOpen ? '▼' : '▶';\n  };\n  const getGoToIcon = () => {\n    return '→';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Covalen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"welcome-message\",\n      children: \"Bienvenue sur votre tableau de bord centralis\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), isAdminMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-dashboard-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-banner\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-banner-text\",\n          children: \"Mode Admin Actif sur le Dashboard.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"admin-manage-btn\",\n          onClick: onAdminPanel,\n          children: \"G\\xE9rer les Onglets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this), \"            \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overview-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"overview-title\",\n        children: \"Vue d'overview des T\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-icon\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Rechercher une t\\xE2che, cat\\xE9gorie ou num\\xE9ro...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-clear\",\n            onClick: () => setSearchTerm(''),\n            title: \"Effacer la recherche\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-hints\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-hint\",\n            children: \"\\uD83D\\uDCA1 Raccourci: Ctrl+/ pour rechercher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results-info\",\n          children: Object.keys(categorizedTasks).length === 0 ? `Aucun résultat pour \"${searchTerm}\"` : `${Object.values(categorizedTasks).flat().length} résultat(s) trouvé(s)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tasks-label\",\n            children: \"T\\xE2ches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), Object.keys(categorizedTasks).map(category => {\n          var _categoryStates$categ;\n          const isOpen = (_categoryStates$categ = categoryStates[category]) !== null && _categoryStates$categ !== void 0 ? _categoryStates$categ : true;\n          const tasks = categorizedTasks[category];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `category-section ${dragOverCategory === category ? 'drag-over' : ''}`,\n            onDragOver: handleDragOver,\n            onDragEnter: e => handleDragEnter(e, category),\n            onDragLeave: handleDragLeave,\n            onDrop: e => handleDrop(e, category),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `category-header ${isAdminMode ? 'admin-mode' : ''}`,\n              onClick: e => handleToggleCategory(category, e),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-left\",\n                children: [isAdminMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"drag-handle\",\n                  children: \"\\u22EE\\u22EE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-toggle\",\n                  children: getCategoryIcon(isOpen)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-name\",\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 41\n                }, this), isAdminMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"task-count\",\n                  children: [\"(\", tasks.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"category-goto\",\n                children: getGoToIcon()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tasks-list\",\n              children: [tasks.map((task, index) => {\n                var _task$fields2, _task$fields2$find;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [isAdminMode && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-drop-zone\",\n                    onDragOver: handleDragOver,\n                    onDrop: e => {\n                      e.stopPropagation();\n                      handleDrop(e, category, index);\n                    },\n                    style: {\n                      height: '2px',\n                      backgroundColor: dragOverCategory === category && (draggedItem === null || draggedItem === void 0 ? void 0 : draggedItem.type) === 'task' ? '#3B82F6' : 'transparent',\n                      transition: 'background-color 0.2s'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `task-item clickable ${isAdminMode ? 'draggable' : ''}`,\n                    draggable: isAdminMode,\n                    onDragStart: e => handleDragStart(e, {\n                      ...task,\n                      category\n                    }, 'task', index),\n                    onDragEnd: handleDragEnd,\n                    onClick: () => !draggedItem && handleTaskClick(task),\n                    title: isAdminMode ? \"Glissez pour déplacer vers une autre catégorie ou réorganiser\" : \"\",\n                    children: [isAdminMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"drag-handle\",\n                      children: \"\\u22EE\\u22EE\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"task-bullet\",\n                      children: \"\\u2022\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"task-name\",\n                      children: [(_task$fields2 = task.fields) === null || _task$fields2 === void 0 ? void 0 : (_task$fields2$find = _task$fields2.find(f => f.key === 'modelNumber')) === null || _task$fields2$find === void 0 ? void 0 : _task$fields2$find.value, \" - \", task.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 49\n                  }, this)]\n                }, `task-container-${task.tabName}-${task.id}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 45\n                }, this);\n              }), isAdminMode && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-drop-zone\",\n                onDragOver: handleDragOver,\n                onDrop: e => {\n                  e.stopPropagation();\n                  handleDrop(e, category, tasks.length);\n                },\n                style: {\n                  height: '10px',\n                  backgroundColor: dragOverCategory === category && (draggedItem === null || draggedItem === void 0 ? void 0 : draggedItem.type) === 'task' ? '#3B82F6' : 'transparent',\n                  transition: 'background-color 0.2s',\n                  borderRadius: '2px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 45\n              }, this), isAdminMode && tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-category-drop-zone\",\n                children: [\"Glissez une t\\xE2che ici pour la d\\xE9placer dans \\\"\", category, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 37\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardMaison, \"WVr3RLlrabyZQusJF6IYDuCKeDQ=\");\n_c = DashboardMaison;\nexport default DashboardMaison;\nvar _c;\n$RefreshReg$(_c, \"DashboardMaison\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","DashboardMaison","appData","onTabChange","onTaskSelect","onAdminPanel","isAdminMode","onMoveTask","onReorderCategories","onReorderTasksInCategory","_s","categoryStates","setCategoryStates","searchTerm","setSearchTerm","draggedItem","setDraggedItem","dragOverCategory","setDragOverCategory","getAllTasksByCategory","allCategories","Object","keys","forEach","tabName","tasks","task","category","push","allTasksByCategory","filteredCategories","filtered","searchLower","toLowerCase","taskMatchesSearch","_task$fields","_task$fields$find","modelNumber","fields","find","f","key","value","name","includes","matchingTasks","filter","categoryMatches","length","categorizedTasks","handleDragStart","e","item","type","index","console","log","dataTransfer","effectAllowed","target","style","opacity","setData","JSON","stringify","handleDragEnd","handleDragOver","preventDefault","dropEffect","handleDragEnter","handleDragLeave","currentTarget","contains","relatedTarget","handleDrop","targetCategory","targetIndex","dragData","transferData","getData","parse","error","sourceIndex","sourceCategory","setTimeout","handleToggleCategory","event","stopPropagation","prev","handleTaskClick","getCategoryIcon","isOpen","getGoToIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","title","values","flat","map","_categoryStates$categ","onDragOver","onDragEnter","onDragLeave","onDrop","_task$fields2","_task$fields2$find","height","backgroundColor","transition","draggable","onDragStart","onDragEnd","id","borderRadius","_c","$RefreshReg$"],"sources":["D:/CODE/covalen-app/src/components/DashboardMaison.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\n\nconst DashboardMaison = ({ appData, onTabChange, onTaskSelect, onAdminPanel, isAdminMode, onMoveTask, onReorderCategories, onReorderTasksInCategory }) => {\n    const [categoryStates, setCategoryStates] = useState({});\n    const [searchTerm, setSearchTerm] = useState('');\n    const [draggedItem, setDraggedItem] = useState(null);\n    const [dragOverCategory, setDragOverCategory] = useState(null);    // Fonction pour regrouper toutes les tâches par catégorie\n    const getAllTasksByCategory = () => {\n        const allCategories = {};\n        \n        // Parcourir tous les onglets sauf 'Maison' et 'Admin'\n        Object.keys(appData).forEach(tabName => {\n            if (tabName !== 'Maison' && tabName !== 'Admin') {\n                const tasks = appData[tabName] || [];\n                tasks.forEach(task => {\n                    const category = task.category || 'Autres';\n                    if (!allCategories[category]) {\n                        allCategories[category] = [];\n                    }\n                    allCategories[category].push({\n                        ...task,\n                        tabName\n                    });\n                });\n            }\n        });\n\n        return allCategories;\n    };\n\n    const allTasksByCategory = getAllTasksByCategory();\n\n    // Filtrer les tâches selon le terme de recherche\n    const filteredCategories = useMemo(() => {\n        if (!searchTerm) return allTasksByCategory;\n\n        const filtered = {};\n        const searchLower = searchTerm.toLowerCase();\n        \n        const taskMatchesSearch = (task) => {\n            const modelNumber = task.fields?.find(f => f.key === 'modelNumber')?.value || '';\n            return (\n                task.name.toLowerCase().includes(searchLower) ||\n                modelNumber.toLowerCase().includes(searchLower)\n            );\n        };\n\n        Object.keys(allTasksByCategory).forEach(category => {\n            const matchingTasks = allTasksByCategory[category].filter(taskMatchesSearch);\n            const categoryMatches = category.toLowerCase().includes(searchLower);\n\n            if (matchingTasks.length > 0 || categoryMatches) {\n                filtered[category] = matchingTasks;\n            }\n        });\n\n        return filtered;\n    }, [allTasksByCategory, searchTerm]);\n\n    const categorizedTasks = filteredCategories;\n\n    // --- Fonctions Drag & Drop ---\n    const handleDragStart = (e, item, type, index = null) => {\n        console.log('🚀 Drag started:', { item, type, index });\n        setDraggedItem({ item, type, index });\n        e.dataTransfer.effectAllowed = 'move';\n        e.target.style.opacity = '0.5';\n        \n        // Ajouter des données pour le transfert\n        e.dataTransfer.setData('text/plain', JSON.stringify({ item, type, index }));\n    };\n\n    const handleDragEnd = (e) => {\n        console.log('🏁 Drag ended');\n        e.target.style.opacity = '1';\n        // On ne reset pas draggedItem ici, on le fait seulement après le drop\n        // setDraggedItem(null);\n        setDragOverCategory(null);\n    };\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n    };\n\n    const handleDragEnter = (e, category) => {\n        e.preventDefault();\n        console.log('📥 Drag enter category:', category);\n        setDragOverCategory(category);\n    };\n\n    const handleDragLeave = (e) => {\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n            console.log('📤 Drag leave');\n            setDragOverCategory(null);\n        }\n    };\n\n    const handleDrop = (e, targetCategory, targetIndex = null) => {\n        e.preventDefault();\n        console.log('🎯 Drop event:', { targetCategory, targetIndex, draggedItem });\n        setDragOverCategory(null);\n\n        // Essayer de récupérer les données depuis le dataTransfer si draggedItem est null\n        let dragData = draggedItem;\n        if (!dragData) {\n            try {\n                const transferData = e.dataTransfer.getData('text/plain');\n                if (transferData) {\n                    dragData = JSON.parse(transferData);\n                    console.log('📦 Recovered drag data from dataTransfer:', dragData);\n                }\n            } catch (error) {\n                console.log('❌ Failed to parse dataTransfer data:', error);\n            }\n        }\n\n        if (!dragData) {\n            console.log('❌ No dragged item available');\n            return;\n        }\n\n        const { item, type, index: sourceIndex } = dragData;\n\n        if (type === 'task') {\n            const sourceCategory = item.category || 'Autres';\n            console.log('📋 Task drop:', { sourceCategory, targetCategory, sourceIndex, targetIndex });\n            \n            if (targetCategory !== sourceCategory) {\n                // Déplacer la tâche vers une nouvelle catégorie\n                console.log('🔄 Moving task between categories');\n                if (onMoveTask) {\n                    onMoveTask(item, targetCategory);\n                }\n            } else if (targetIndex !== null && sourceIndex !== null && sourceIndex !== targetIndex) {\n                // Réorganiser les tâches dans la même catégorie\n                console.log('🔃 Reordering tasks in same category');\n                if (onReorderTasksInCategory) {\n                    onReorderTasksInCategory(sourceCategory, sourceIndex, targetIndex);\n                }\n            }\n        } else if (type === 'category' && onReorderCategories) {\n            // Réorganiser les catégories\n            console.log('📂 Reordering categories');\n            onReorderCategories(item, targetCategory);\n        }\n\n        // Reset draggedItem après un petit délai pour s'assurer que le drop est traité\n        setTimeout(() => {\n            setDraggedItem(null);\n        }, 100);\n    };\n\n    const handleToggleCategory = (category, event) => {\n        event.stopPropagation();\n        setCategoryStates(prev => ({\n            ...prev,\n            [category]: !prev[category]\n        }));\n    };\n\n    const handleTaskClick = (task) => {\n        // Naviguer vers l'onglet et sélectionner la tâche\n        onTabChange(task.tabName);\n        onTaskSelect(task);\n    };\n\n    const getCategoryIcon = (isOpen) => {\n        return isOpen ? '▼' : '▶';\n    };\n\n    const getGoToIcon = () => {\n        return '→';\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            {/* En-tête principal */}\n            <div className=\"dashboard-header\">\n                <h1 className=\"dashboard-title\">Covalen</h1>\n            </div>\n\n            {/* Message de bienvenue */}\n            <p className=\"welcome-message\">\n                Bienvenue sur votre tableau de bord centralisé.\n            </p>\n\n            {/* Section Admin - seulement visible en mode admin */}\n            {isAdminMode && (\n                <div className=\"admin-dashboard-section\">\n                    <div className=\"admin-banner\">\n                        <p className=\"admin-banner-text\">Mode Admin Actif sur le Dashboard.</p>\n                        <button className=\"admin-manage-btn\" onClick={onAdminPanel}>\n                            Gérer les Onglets\n                        </button>\n                    </div>\n                </div>\n            )}            {/* Section Vue d'overview */}\n            <div className=\"overview-section\">\n                <h2 className=\"overview-title\">Vue d'overview des Tâches</h2>\n                \n                {/* Barre de recherche */}\n                <div className=\"search-container\">\n                    <div className=\"search-bar\">\n                        <span className=\"search-icon\">🔍</span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Rechercher une tâche, catégorie ou numéro...\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                            className=\"search-input\"\n                        />\n                        {searchTerm && (\n                            <button\n                                className=\"search-clear\"\n                                onClick={() => setSearchTerm('')}\n                                title=\"Effacer la recherche\"\n                            >\n                                ✕\n                            </button>\n                        )}\n                    </div>\n                    <div className=\"search-hints\">\n                        <span className=\"search-hint\">💡 Raccourci: Ctrl+/ pour rechercher</span>\n                    </div>\n                    {searchTerm && (\n                        <div className=\"search-results-info\">\n                            {Object.keys(categorizedTasks).length === 0 \n                                ? `Aucun résultat pour \"${searchTerm}\"` \n                                : `${Object.values(categorizedTasks).flat().length} résultat(s) trouvé(s)`\n                            }\n                        </div>\n                    )}\n                </div>\n\n                {/* Conteneur des catégories */}\n                <div className=\"categories-container\">\n                    <div className=\"tasks-header\">\n                        <span className=\"tasks-label\">Tâches</span>\n                    </div>\n\n                    {/* Liste des catégories */}\n                    {Object.keys(categorizedTasks).map(category => {\n                        const isOpen = categoryStates[category] ?? true;\n                        const tasks = categorizedTasks[category];\n\n                        return (\n                            <div \n                                key={category} \n                                className={`category-section ${dragOverCategory === category ? 'drag-over' : ''}`}\n                                onDragOver={handleDragOver}\n                                onDragEnter={(e) => handleDragEnter(e, category)}\n                                onDragLeave={handleDragLeave}\n                                onDrop={(e) => handleDrop(e, category)}\n                            >\n                                {/* En-tête de catégorie */}\n                                <div\n                                    className={`category-header ${isAdminMode ? 'admin-mode' : ''}`}\n                                    onClick={(e) => handleToggleCategory(category, e)}\n                                >\n                                    <div className=\"category-left\">\n                                        {isAdminMode && <span className=\"drag-handle\">⋮⋮</span>}\n                                        <span className=\"category-toggle\">\n                                            {getCategoryIcon(isOpen)}\n                                        </span>\n                                        <span className=\"category-name\">{category}</span>\n                                        {isAdminMode && (\n                                            <span className=\"task-count\">({tasks.length})</span>\n                                        )}\n                                    </div>\n                                    <span className=\"category-goto\">{getGoToIcon()}</span>\n                                </div>\n\n                                {/* Liste des tâches (si ouvert) */}\n                                {isOpen && (\n                                    <div className=\"tasks-list\">\n                                        {tasks.map((task, index) => (\n                                            <div key={`task-container-${task.tabName}-${task.id}`}>\n                                                {/* Zone de drop avant la tâche (en mode admin uniquement) */}\n                                                {isAdminMode && (\n                                                    <div \n                                                        className=\"task-drop-zone\"\n                                                        onDragOver={handleDragOver}\n                                                        onDrop={(e) => {\n                                                            e.stopPropagation();\n                                                            handleDrop(e, category, index);\n                                                        }}\n                                                        style={{\n                                                            height: '2px',\n                                                            backgroundColor: dragOverCategory === category && draggedItem?.type === 'task' ? '#3B82F6' : 'transparent',\n                                                            transition: 'background-color 0.2s'\n                                                        }}\n                                                    />\n                                                )}\n                                                \n                                                {/* Élément de tâche */}\n                                                <div\n                                                    className={`task-item clickable ${isAdminMode ? 'draggable' : ''}`}\n                                                    draggable={isAdminMode}\n                                                    onDragStart={(e) => handleDragStart(e, { ...task, category }, 'task', index)}\n                                                    onDragEnd={handleDragEnd}\n                                                    onClick={() => !draggedItem && handleTaskClick(task)}\n                                                    title={isAdminMode ? \"Glissez pour déplacer vers une autre catégorie ou réorganiser\" : \"\"}\n                                                >\n                                                    {isAdminMode && <span className=\"drag-handle\">⋮⋮</span>}\n                                                    <span className=\"task-bullet\">•</span>\n                                                    <span className=\"task-name\">\n                                                        {task.fields?.find(f => f.key === 'modelNumber')?.value} - {task.name}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        ))}\n                                        \n                                        {/* Zone de drop finale (en mode admin uniquement) */}\n                                        {isAdminMode && (\n                                            <div \n                                                className=\"task-drop-zone\"\n                                                onDragOver={handleDragOver}\n                                                onDrop={(e) => {\n                                                    e.stopPropagation();\n                                                    handleDrop(e, category, tasks.length);\n                                                }}\n                                                style={{\n                                                    height: '10px',\n                                                    backgroundColor: dragOverCategory === category && draggedItem?.type === 'task' ? '#3B82F6' : 'transparent',\n                                                    transition: 'background-color 0.2s',\n                                                    borderRadius: '2px'\n                                                }}\n                                            />\n                                        )}\n                                        \n                                        {/* Message pour catégorie vide */}\n                                        {isAdminMode && tasks.length === 0 && (\n                                            <div className=\"empty-category-drop-zone\">\n                                                Glissez une tâche ici pour la déplacer dans \"{category}\"\n                                            </div>\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardMaison;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}