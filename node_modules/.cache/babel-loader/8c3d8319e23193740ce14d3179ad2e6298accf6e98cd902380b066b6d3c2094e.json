{"ast":null,"code":"// DonnÃ©es de test avec BEAUCOUP de tÃ¢ches pour stress-test le layout grille 4 colonnes\nexport const massiveTestAppData = {\n  Maison: {},\n  // L'onglet Maison n'aura pas de tÃ¢ches directement\n  Adjointes: []\n};\n\n// Fonction pour gÃ©nÃ©rer des tÃ¢ches alÃ©atoirement\nconst generateRandomTasks = () => {\n  const categories = ['Annulations', 'RÃ©clamations', 'Validations', 'Correspondances', 'Expertises', 'Sinistres', 'Contrats', 'Clients', 'Facturations', 'Juridique', 'Techniques', 'Archives'];\n  const taskPrefixes = ['Traitement', 'Validation', 'VÃ©rification', 'ContrÃ´le', 'Analyse', 'Suivi', 'Gestion', 'RÃ©vision', 'Expertise', 'Inspection', 'Ã‰valuation', 'Approbation', 'Archivage', 'Transmission', 'Notification'];\n  const taskSuffixes = ['urgent', 'standard', 'prioritaire', 'diffÃ©rÃ©', 'spÃ©cial', 'mensuel', 'hebdomadaire', 'quotidien', 'annuel', 'trimestriel', 'automatique', 'manuel', 'numÃ©rique', 'papier', 'Ã©lectronique'];\n  const tasks = [];\n  let taskId = 1;\n\n  // GÃ©nÃ©rer 15-25 tÃ¢ches par catÃ©gorie (total: ~240 tÃ¢ches)\n  categories.forEach(category => {\n    const tasksInCategory = Math.floor(Math.random() * 11) + 15; // 15-25 tÃ¢ches\n\n    for (let i = 0; i < tasksInCategory; i++) {\n      const prefix = taskPrefixes[Math.floor(Math.random() * taskPrefixes.length)];\n      const suffix = taskSuffixes[Math.floor(Math.random() * taskSuffixes.length)];\n      const modelNumber = Math.floor(Math.random() * 900) + 100; // 100-999\n\n      const task = {\n        id: taskId.toString(),\n        name: `${prefix} ${suffix} ${category.toLowerCase()}`,\n        category: category,\n        fields: [{\n          key: 'modelNumber',\n          label: 'NumÃ©ro de ModÃ¨le/Lettre',\n          type: 'text',\n          value: modelNumber.toString(),\n          adminOnlyEdit: true\n        }, {\n          key: 'fullTemplateName',\n          label: 'ModÃ¨le de lettre',\n          type: 'text',\n          value: `${prefix} ${suffix} - ModÃ¨le ${modelNumber}`,\n          adminOnlyEdit: true,\n          copyable: true\n        }, {\n          key: 'attachmentName',\n          label: 'Nom de PiÃ¨ce Jointe',\n          type: 'text',\n          value: `2025-06-26 ${category} - ${prefix} ${modelNumber}`,\n          adminOnlyEdit: false,\n          copyable: true\n        }]\n      };\n\n      // Ajouter des champs supplÃ©mentaires alÃ©atoirement\n      if (Math.random() > 0.5) {\n        task.fields.push({\n          key: 'noteTemplate',\n          label: 'Note EPIC',\n          type: 'textarea',\n          value: `${category} - ${prefix} ${modelNumber} + documentation`,\n          adminOnlyEdit: false,\n          copyable: true,\n          specialButton: 'addDate'\n        });\n      }\n      if (Math.random() > 0.7) {\n        task.fields.push({\n          key: 'procedure',\n          label: 'ProcÃ©dure Ã  Suivre',\n          type: 'textarea',\n          value: `1. Analyser le dossier ${category.toLowerCase()}.\\\\n2. Appliquer la procÃ©dure ${modelNumber}.\\\\n3. Archiver le rÃ©sultat.`,\n          adminOnlyEdit: true,\n          hasCheckboxes: Math.random() > 0.5\n        });\n      }\n      tasks.push(task);\n      taskId++;\n    }\n  });\n  return tasks;\n};\n\n// GÃ©nÃ©rer les tÃ¢ches\nmassiveTestAppData.Adjointes = generateRandomTasks();\nconsole.log(`ðŸ§ª DonnÃ©es de test gÃ©nÃ©rÃ©es: ${massiveTestAppData.Adjointes.length} tÃ¢ches rÃ©parties sur ${new Set(massiveTestAppData.Adjointes.map(t => t.category)).size} catÃ©gories`);\n\n// Stats par catÃ©gorie\nconst categoryStats = {};\nmassiveTestAppData.Adjointes.forEach(task => {\n  categoryStats[task.category] = (categoryStats[task.category] || 0) + 1;\n});\nconsole.log('ðŸ“Š RÃ©partition par catÃ©gorie:', categoryStats);","map":{"version":3,"names":["massiveTestAppData","Maison","Adjointes","generateRandomTasks","categories","taskPrefixes","taskSuffixes","tasks","taskId","forEach","category","tasksInCategory","Math","floor","random","i","prefix","length","suffix","modelNumber","task","id","toString","name","toLowerCase","fields","key","label","type","value","adminOnlyEdit","copyable","push","specialButton","hasCheckboxes","console","log","Set","map","t","size","categoryStats"],"sources":["d:/CODE/covalen-app/src/data/massiveTestData.js"],"sourcesContent":["// DonnÃ©es de test avec BEAUCOUP de tÃ¢ches pour stress-test le layout grille 4 colonnes\nexport const massiveTestAppData = {\n    Maison: {}, // L'onglet Maison n'aura pas de tÃ¢ches directement\n    Adjointes: []\n};\n\n// Fonction pour gÃ©nÃ©rer des tÃ¢ches alÃ©atoirement\nconst generateRandomTasks = () => {\n    const categories = [\n        'Annulations',\n        'RÃ©clamations',\n        'Validations',\n        'Correspondances',\n        'Expertises',\n        'Sinistres',\n        'Contrats',\n        'Clients',\n        'Facturations',\n        'Juridique',\n        'Techniques',\n        'Archives'\n    ];\n\n    const taskPrefixes = [\n        'Traitement', 'Validation', 'VÃ©rification', 'ContrÃ´le', 'Analyse',\n        'Suivi', 'Gestion', 'RÃ©vision', 'Expertise', 'Inspection',\n        'Ã‰valuation', 'Approbation', 'Archivage', 'Transmission', 'Notification'\n    ];\n\n    const taskSuffixes = [\n        'urgent', 'standard', 'prioritaire', 'diffÃ©rÃ©', 'spÃ©cial',\n        'mensuel', 'hebdomadaire', 'quotidien', 'annuel', 'trimestriel',\n        'automatique', 'manuel', 'numÃ©rique', 'papier', 'Ã©lectronique'\n    ];\n\n    const tasks = [];\n    let taskId = 1;\n\n    // GÃ©nÃ©rer 15-25 tÃ¢ches par catÃ©gorie (total: ~240 tÃ¢ches)\n    categories.forEach(category => {\n        const tasksInCategory = Math.floor(Math.random() * 11) + 15; // 15-25 tÃ¢ches\n\n        for (let i = 0; i < tasksInCategory; i++) {\n            const prefix = taskPrefixes[Math.floor(Math.random() * taskPrefixes.length)];\n            const suffix = taskSuffixes[Math.floor(Math.random() * taskSuffixes.length)];\n            const modelNumber = Math.floor(Math.random() * 900) + 100; // 100-999\n\n            const task = {\n                id: taskId.toString(),\n                name: `${prefix} ${suffix} ${category.toLowerCase()}`,\n                category: category,\n                fields: [\n                    {\n                        key: 'modelNumber',\n                        label: 'NumÃ©ro de ModÃ¨le/Lettre',\n                        type: 'text',\n                        value: modelNumber.toString(),\n                        adminOnlyEdit: true\n                    },\n                    {\n                        key: 'fullTemplateName',\n                        label: 'ModÃ¨le de lettre',\n                        type: 'text',\n                        value: `${prefix} ${suffix} - ModÃ¨le ${modelNumber}`,\n                        adminOnlyEdit: true,\n                        copyable: true\n                    },\n                    {\n                        key: 'attachmentName',\n                        label: 'Nom de PiÃ¨ce Jointe',\n                        type: 'text',\n                        value: `2025-06-26 ${category} - ${prefix} ${modelNumber}`,\n                        adminOnlyEdit: false,\n                        copyable: true\n                    }\n                ]\n            };\n\n            // Ajouter des champs supplÃ©mentaires alÃ©atoirement\n            if (Math.random() > 0.5) {\n                task.fields.push({\n                    key: 'noteTemplate',\n                    label: 'Note EPIC',\n                    type: 'textarea',\n                    value: `${category} - ${prefix} ${modelNumber} + documentation`,\n                    adminOnlyEdit: false,\n                    copyable: true,\n                    specialButton: 'addDate'\n                });\n            }\n\n            if (Math.random() > 0.7) {\n                task.fields.push({\n                    key: 'procedure',\n                    label: 'ProcÃ©dure Ã  Suivre',\n                    type: 'textarea',\n                    value: `1. Analyser le dossier ${category.toLowerCase()}.\\\\n2. Appliquer la procÃ©dure ${modelNumber}.\\\\n3. Archiver le rÃ©sultat.`,\n                    adminOnlyEdit: true,\n                    hasCheckboxes: Math.random() > 0.5\n                });\n            }\n\n            tasks.push(task);\n            taskId++;\n        }\n    });\n\n    return tasks;\n};\n\n// GÃ©nÃ©rer les tÃ¢ches\nmassiveTestAppData.Adjointes = generateRandomTasks();\n\nconsole.log(`ðŸ§ª DonnÃ©es de test gÃ©nÃ©rÃ©es: ${massiveTestAppData.Adjointes.length} tÃ¢ches rÃ©parties sur ${new Set(massiveTestAppData.Adjointes.map(t => t.category)).size} catÃ©gories`);\n\n// Stats par catÃ©gorie\nconst categoryStats = {};\nmassiveTestAppData.Adjointes.forEach(task => {\n    categoryStats[task.category] = (categoryStats[task.category] || 0) + 1;\n});\n\nconsole.log('ðŸ“Š RÃ©partition par catÃ©gorie:', categoryStats);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}