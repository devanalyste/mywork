{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\covalen-app\\\\src\\\\components\\\\DashboardMaison.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardMaison = ({\n  appData,\n  onAdminPanel\n}) => {\n  _s();\n  const [categoryStates, setCategoryStates] = useState({});\n\n  // Fonction pour regrouper toutes les tâches par catégorie\n  const getAllTasksByCategory = () => {\n    const allCategories = {};\n\n    // Parcourir tous les onglets sauf 'Maison' et 'Admin'\n    Object.keys(appData).forEach(tabName => {\n      if (tabName !== 'Maison' && tabName !== 'Admin') {\n        const tasks = appData[tabName] || [];\n        tasks.forEach(task => {\n          const category = task.category || 'Autres';\n          if (!allCategories[category]) {\n            allCategories[category] = [];\n          }\n          allCategories[category].push({\n            ...task,\n            tabName\n          });\n        });\n      }\n    });\n    return allCategories;\n  };\n  const categorizedTasks = getAllTasksByCategory();\n  const handleToggleCategory = category => {\n    setCategoryStates(prev => ({\n      ...prev,\n      [category]: !prev[category]\n    }));\n  };\n  const getCategoryIcon = isOpen => {\n    return isOpen ? '▼' : '▶';\n  };\n  const getGoToIcon = () => {\n    return '→';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Covalen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"admin-mode-btn\",\n        onClick: onAdminPanel,\n        children: \"Mode Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"welcome-message\",\n      children: \"Bienvenue sur votre tableau de bord centralis\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overview-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"overview-title\",\n        children: \"Vue d'overview des T\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tasks-label\",\n            children: \"T\\xE2ches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), Object.keys(categorizedTasks).map(category => {\n          var _categoryStates$categ;\n          const isOpen = (_categoryStates$categ = categoryStates[category]) !== null && _categoryStates$categ !== void 0 ? _categoryStates$categ : true;\n          const tasks = categorizedTasks[category];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-header\",\n              onClick: () => handleToggleCategory(category),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-left\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-toggle\",\n                  children: getCategoryIcon(isOpen)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-name\",\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"category-goto\",\n                children: getGoToIcon()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tasks-list\",\n              children: tasks.map(task => {\n                var _task$fields, _task$fields$find;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"task-bullet\",\n                    children: \"\\u2022\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"task-name\",\n                    children: [(_task$fields = task.fields) === null || _task$fields === void 0 ? void 0 : (_task$fields$find = _task$fields.find(f => f.key === 'modelNumber')) === null || _task$fields$find === void 0 ? void 0 : _task$fields$find.value, \" - \", task.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 49\n                  }, this)]\n                }, `${task.tabName}-${task.id}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardMaison, \"hMm/RCIF1brsfHXRBsYKs7uVxzU=\");\n_c = DashboardMaison;\nexport default DashboardMaison;\nvar _c;\n$RefreshReg$(_c, \"DashboardMaison\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DashboardMaison","appData","onAdminPanel","_s","categoryStates","setCategoryStates","getAllTasksByCategory","allCategories","Object","keys","forEach","tabName","tasks","task","category","push","categorizedTasks","handleToggleCategory","prev","getCategoryIcon","isOpen","getGoToIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_categoryStates$categ","_task$fields","_task$fields$find","fields","find","f","key","value","name","id","_c","$RefreshReg$"],"sources":["D:/CODE/covalen-app/src/components/DashboardMaison.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst DashboardMaison = ({ appData, onAdminPanel }) => {\n    const [categoryStates, setCategoryStates] = useState({});\n\n    // Fonction pour regrouper toutes les tâches par catégorie\n    const getAllTasksByCategory = () => {\n        const allCategories = {};\n        \n        // Parcourir tous les onglets sauf 'Maison' et 'Admin'\n        Object.keys(appData).forEach(tabName => {\n            if (tabName !== 'Maison' && tabName !== 'Admin') {\n                const tasks = appData[tabName] || [];\n                tasks.forEach(task => {\n                    const category = task.category || 'Autres';\n                    if (!allCategories[category]) {\n                        allCategories[category] = [];\n                    }\n                    allCategories[category].push({\n                        ...task,\n                        tabName\n                    });\n                });\n            }\n        });\n\n        return allCategories;\n    };\n\n    const categorizedTasks = getAllTasksByCategory();\n\n    const handleToggleCategory = (category) => {\n        setCategoryStates(prev => ({\n            ...prev,\n            [category]: !prev[category]\n        }));\n    };\n\n    const getCategoryIcon = (isOpen) => {\n        return isOpen ? '▼' : '▶';\n    };\n\n    const getGoToIcon = () => {\n        return '→';\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            {/* En-tête principal */}\n            <div className=\"dashboard-header\">\n                <h1 className=\"dashboard-title\">Covalen</h1>\n                <button className=\"admin-mode-btn\" onClick={onAdminPanel}>Mode Admin</button>\n            </div>\n\n            {/* Message de bienvenue */}\n            <p className=\"welcome-message\">\n                Bienvenue sur votre tableau de bord centralisé.\n            </p>\n\n            {/* Section Vue d'overview */}\n            <div className=\"overview-section\">\n                <h2 className=\"overview-title\">Vue d'overview des Tâches</h2>\n                \n                {/* Conteneur des catégories */}\n                <div className=\"categories-container\">\n                    <div className=\"tasks-header\">\n                        <span className=\"tasks-label\">Tâches</span>\n                    </div>\n\n                    {/* Liste des catégories */}\n                    {Object.keys(categorizedTasks).map(category => {\n                        const isOpen = categoryStates[category] ?? true;\n                        const tasks = categorizedTasks[category];\n                        \n                        return (\n                            <div key={category} className=\"category-section\">\n                                {/* En-tête de catégorie */}\n                                <div \n                                    className=\"category-header\"\n                                    onClick={() => handleToggleCategory(category)}\n                                >\n                                    <div className=\"category-left\">\n                                        <span className=\"category-toggle\">\n                                            {getCategoryIcon(isOpen)}\n                                        </span>\n                                        <span className=\"category-name\">{category}</span>\n                                    </div>\n                                    <span className=\"category-goto\">{getGoToIcon()}</span>\n                                </div>\n\n                                {/* Liste des tâches (si ouvert) */}\n                                {isOpen && (\n                                    <div className=\"tasks-list\">\n                                        {tasks.map(task => (\n                                            <div key={`${task.tabName}-${task.id}`} className=\"task-item\">\n                                                <span className=\"task-bullet\">•</span>\n                                                <span className=\"task-name\">\n                                                    {task.fields?.find(f => f.key === 'modelNumber')?.value} - {task.name}\n                                                </span>\n                                            </div>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardMaison;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}