{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\covalen-app\\\\src\\\\components\\\\DetailTacheAdjointe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\n// Constantes pour les classes CSS réutilisables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CSS_CLASSES = {\n  button: {\n    primary: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-5 rounded-lg shadow-md flex items-center justify-center transition-all duration-300\",\n    secondary: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",\n    admin: \"bg-gray-700 hover:bg-gray-800 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",\n    save: \"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",\n    delete: \"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\"\n  },\n  input: {\n    base: \"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300\",\n    readonly: \"bg-gray-100\",\n    editable: \"bg-white\"\n  }\n};\n\n// Messages d'aide\nconst MESSAGES = {\n  copy: {\n    success: 'Copié dans le presse-papiers !',\n    error: 'Échec de la copie. Veuillez copier manuellement.',\n    fallbackError: 'Erreur de copie (fallback):'\n  },\n  save: {\n    success: 'Modifications sauvegardées !',\n    adminRequired: 'Vous devez être en Mode Admin pour sauvegarder les modifications structurelles.'\n  },\n  quickAdd: {\n    date: 'Date ajoutée à la note !',\n    facture: 'Facture ajoutée à la note !',\n    releve: 'Relevé ajouté à la note !'\n  }\n};\nconst CopyIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: \"h-5 w-5 mr-1\",\n  viewBox: \"0 0 20 20\",\n  fill: \"currentColor\",\n  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 39,\n  columnNumber: 5\n}, this);\n_c = CopyIcon;\nconst ClipboardIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  className: \"h-5 w-5 mr-1\",\n  viewBox: \"0 0 20 20\",\n  fill: \"currentColor\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M8 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V6h1a1 1 0 100-2H7V3a1 1 0 00-1-1z\",\n    clipRule: \"evenodd\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 5\n}, this);\n\n// Composant pour les champs de saisie réutilisables\n_c2 = ClipboardIcon;\nconst InputField = ({\n  field,\n  isAdminMode,\n  onChange,\n  onCopy\n}) => {\n  if (!field) return null;\n  const getInputClassName = () => {\n    const baseClass = CSS_CLASSES.input.base;\n    const stateClass = field.adminOnlyEdit && !isAdminMode ? CSS_CLASSES.input.readonly : CSS_CLASSES.input.editable;\n    if (field.copyable) {\n      return `flex-grow p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 ${stateClass}`;\n    }\n    return `${baseClass} ${stateClass}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      children: [field.label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: field.key,\n        value: field.value,\n        onChange: e => onChange(field.key, e.target.value),\n        readOnly: field.adminOnlyEdit && !isAdminMode,\n        className: getInputClassName()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), field.copyable && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onCopy(field.value),\n        className: CSS_CLASSES.button.primary,\n        title: `Copier ${field.label.toLowerCase()}`,\n        children: [/*#__PURE__*/_jsxDEV(CopyIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), \"Copier\", field.key === 'attachmentName' ? ' PJ' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_c3 = InputField;\nInputField.propTypes = {\n  field: PropTypes.object,\n  isAdminMode: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onCopy: PropTypes.func.isRequired\n};\n\n// Composant pour les zones de texte avec actions rapides\nconst TextAreaField = ({\n  field,\n  isAdminMode,\n  onChange,\n  onCopy,\n  onInsertText,\n  showNotification\n}) => {\n  if (!field) return null;\n  const textareaClassName = `w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 resize-y ${field.adminOnlyEdit && !isAdminMode ? CSS_CLASSES.input.readonly : CSS_CLASSES.input.editable}`;\n  const handleQuickAction = (text, message, prepend = false) => {\n    onInsertText(text, prepend);\n    showNotification(message, 'info');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4 w-full\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-gray-700 text-sm font-bold mb-2\",\n      children: [field.label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: field.key,\n      value: field.value,\n      onChange: e => onChange(field.key, e.target.value),\n      readOnly: field.adminOnlyEdit && !isAdminMode,\n      rows: \"4\",\n      className: textareaClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), field.copyable && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mt-3 flex-wrap gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onCopy(field.value),\n        className: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg shadow-md flex items-center justify-center transition-all duration-300\",\n        title: \"Copier la note compl\\xE8te\",\n        children: [/*#__PURE__*/_jsxDEV(ClipboardIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), \"Copier Note\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const today = new Date().toLocaleDateString('fr-CA', {\n              year: 'numeric',\n              month: '2-digit',\n              day: '2-digit'\n            });\n            handleQuickAction(`${today}\\n`, MESSAGES.quickAdd.date, true);\n          },\n          className: CSS_CLASSES.button.secondary,\n          title: \"Ajouter la date actuelle \\xE0 la note\",\n          children: \"+ Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuickAction(' + Facture', MESSAGES.quickAdd.facture),\n          className: CSS_CLASSES.button.secondary,\n          title: \"Ajouter ' + Facture' \\xE0 la note\",\n          children: \"+ Facture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuickAction(' + Relevé', MESSAGES.quickAdd.releve),\n          className: CSS_CLASSES.button.secondary,\n          title: \"Ajouter ' + Relev\\xE9' \\xE0 la note\",\n          children: \"+ Relev\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_c4 = TextAreaField;\nTextAreaField.propTypes = {\n  field: PropTypes.object,\n  isAdminMode: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onCopy: PropTypes.func.isRequired,\n  onInsertText: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired\n};\nconst DetailTacheAdjointe = ({\n  task = null,\n  onUpdateTask,\n  onAdminModeToggle,\n  isAdminMode,\n  onDeleteTask,\n  showNotification\n}) => {\n  _s();\n  const [editedTask, setEditedTask] = useState(task || {\n    id: null,\n    name: '',\n    fields: []\n  });\n  const [procedureCheckStates, setProcedureCheckStates] = useState({});\n  useEffect(() => {\n    setEditedTask(task || {\n      id: null,\n      name: '',\n      fields: []\n    });\n    setProcedureCheckStates({});\n  }, [task]);\n  const handleFieldChange = (key, value) => {\n    setEditedTask(prev => ({\n      ...prev,\n      fields: prev.fields.map(field => field.key === key ? {\n        ...field,\n        value: value\n      } : field)\n    }));\n  };\n\n  // Fonction optimisée pour la copie avec gestion d'erreur améliorée\n  const handleCopy = useCallback(async text => {\n    if (navigator.clipboard && window.isSecureContext) {\n      try {\n        await navigator.clipboard.writeText(text);\n        showNotification(MESSAGES.copy.success, 'success');\n      } catch (err) {\n        console.error('Erreur de copie:', err);\n        showNotification(MESSAGES.copy.error, 'error');\n      }\n    } else {\n      // Fallback pour les navigateurs plus anciens ou les contextes non-sécurisés\n      const textarea = document.createElement('textarea');\n      textarea.value = text;\n      textarea.style.position = 'fixed';\n      document.body.appendChild(textarea);\n      textarea.focus();\n      textarea.select();\n      try {\n        // Note: document.execCommand est obsolète mais nécessaire comme fallback\n        document.execCommand('copy');\n        showNotification(MESSAGES.copy.success, 'success');\n      } catch (err) {\n        console.error(MESSAGES.copy.fallbackError, err);\n        showNotification(MESSAGES.copy.error, 'error');\n      } finally {\n        document.body.removeChild(textarea);\n      }\n    }\n  }, [showNotification]);\n  const handleSave = useCallback(() => {\n    if (isAdminMode) {\n      onUpdateTask(editedTask);\n      showNotification(MESSAGES.save.success, 'success');\n    } else {\n      showNotification(MESSAGES.save.adminRequired, 'error');\n    }\n  }, [isAdminMode, onUpdateTask, editedTask, showNotification]);\n  const insertTextIntoNote = useCallback((textToInsert, prepend = false) => {\n    const noteField = editedTask.fields.find(f => f.key === 'noteTemplate');\n    if (noteField) {\n      const currentValue = noteField.value;\n      const newValue = prepend ? `${textToInsert}${currentValue}` : `${currentValue}${textToInsert}`;\n      handleFieldChange('noteTemplate', newValue);\n    }\n  }, [editedTask.fields]);\n  const handleProcedureCheckChange = useCallback(index => {\n    setProcedureCheckStates(prevStates => ({\n      ...prevStates,\n      [index]: !prevStates[index]\n    }));\n  }, []);\n\n  // Extraction des champs avec useMemo pour optimiser les performances\n  const taskFields = useMemo(() => {\n    if (!(editedTask !== null && editedTask !== void 0 && editedTask.fields)) return {};\n    return {\n      modelNumber: editedTask.fields.find(field => field.key === 'modelNumber'),\n      fullTemplateName: editedTask.fields.find(field => field.key === 'fullTemplateName'),\n      attachmentName: editedTask.fields.find(field => field.key === 'attachmentName'),\n      noteTemplate: editedTask.fields.find(field => field.key === 'noteTemplate'),\n      procedure: editedTask.fields.find(field => field.key === 'procedure')\n    };\n  }, [editedTask]);\n\n  // Vérification de l'existence de la tâche\n  if (!task) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-8 flex justify-center items-center bg-gray-50 rounded-r-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-xl text-gray-500\",\n        children: \"S\\xE9lectionnez une t\\xE2che pour voir les d\\xE9tails.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-1 p-8 bg-gray-50 rounded-r-lg shadow-inner overflow-y-auto max-h-[calc(100vh-120px)] scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center mb-6 border-b-2 border-gray-200 pb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-3xl font-extrabold text-blue-700\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onAdminModeToggle(!isAdminMode),\n        className: CSS_CLASSES.button.admin,\n        title: isAdminMode ? 'Quitter Mode Admin' : 'Activer Mode Admin (Édition)',\n        children: isAdminMode ? 'Quitter Admin' : 'Mode Admin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        field: taskFields.modelNumber,\n        isAdminMode: isAdminMode,\n        onChange: handleFieldChange,\n        onCopy: handleCopy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        field: taskFields.fullTemplateName,\n        isAdminMode: isAdminMode,\n        onChange: handleFieldChange,\n        onCopy: handleCopy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8 p-6 bg-white rounded-lg shadow-md\",\n      children: [taskFields.attachmentName && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: [taskFields.attachmentName.label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: taskFields.attachmentName.key,\n            value: taskFields.attachmentName.value,\n            onChange: e => handleFieldChange(taskFields.attachmentName.key, e.target.value),\n            readOnly: taskFields.attachmentName.adminOnlyEdit && !isAdminMode,\n            className: `flex-grow p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 ${taskFields.attachmentName.adminOnlyEdit && !isAdminMode ? CSS_CLASSES.input.readonly : CSS_CLASSES.input.editable}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this), taskFields.attachmentName.copyable && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleCopy(taskFields.attachmentName.value),\n            className: CSS_CLASSES.button.primary,\n            title: \"Copier le nom de la pi\\xE8ce jointe\",\n            children: [/*#__PURE__*/_jsxDEV(CopyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 37\n            }, this), \"Copier PJ\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n        field: taskFields.noteTemplate,\n        isAdminMode: isAdminMode,\n        onChange: handleFieldChange,\n        onCopy: handleCopy,\n        onInsertText: insertTextIntoNote,\n        showNotification: showNotification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }, this), taskFields.procedure && (() => {\n      let procedureContent;\n      if (isAdminMode) {\n        procedureContent = /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: taskFields.procedure.key,\n          value: taskFields.procedure.value,\n          onChange: e => handleFieldChange(taskFields.procedure.key, e.target.value),\n          rows: \"8\",\n          className: \"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 resize-y bg-white\",\n          placeholder: \"D\\xE9crivez ici la proc\\xE9dure compl\\xE8te pour cette t\\xE2che (chaque ligne sera une case \\xE0 cocher si l'option est activ\\xE9e)...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 25\n        }, this);\n      } else if (taskFields.procedure.hasCheckboxes) {\n        procedureContent = /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-none p-0 m-0 space-y-2\",\n          children: String(taskFields.procedure.value).split('\\n').filter(line => line.trim() !== '').map((line, index) => {\n            const lineKey = `${taskFields.procedure.key}-${index}-${line.trim()}`;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex items-center text-gray-800\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: procedureCheckStates[index] || false,\n                onChange: () => handleProcedureCheckChange(index),\n                className: \"mr-2 h-5 w-5 text-blue-600 rounded focus:ring-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: procedureCheckStates[index] ? 'line-through text-gray-500' : '',\n                children: line.trim()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 41\n              }, this)]\n            }, lineKey, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this);\n      } else {\n        procedureContent = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prose max-w-none text-gray-800 whitespace-pre-wrap p-3 border border-gray-200 rounded-lg bg-gray-50\",\n          children: taskFields.procedure.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 p-6 bg-white rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: [taskFields.procedure.label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }, this), procedureContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }, this);\n    })(), isAdminMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-3 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        className: CSS_CLASSES.button.save,\n        children: \"Sauvegarder les modifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onDeleteTask(task.id),\n        className: CSS_CLASSES.button.delete,\n        children: \"Supprimer la t\\xE2che\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n};\n_s(DetailTacheAdjointe, \"oURo66EocaGW6zoPLzu4BHb2+t4=\");\n_c5 = DetailTacheAdjointe;\nDetailTacheAdjointe.propTypes = {\n  task: PropTypes.object,\n  onUpdateTask: PropTypes.func.isRequired,\n  onAdminModeToggle: PropTypes.func.isRequired,\n  isAdminMode: PropTypes.bool.isRequired,\n  onDeleteTask: PropTypes.func.isRequired,\n  showNotification: PropTypes.func.isRequired\n};\nexport default DetailTacheAdjointe;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CopyIcon\");\n$RefreshReg$(_c2, \"ClipboardIcon\");\n$RefreshReg$(_c3, \"InputField\");\n$RefreshReg$(_c4, \"TextAreaField\");\n$RefreshReg$(_c5, \"DetailTacheAdjointe\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","PropTypes","jsxDEV","_jsxDEV","CSS_CLASSES","button","primary","secondary","admin","save","delete","input","base","readonly","editable","MESSAGES","copy","success","error","fallbackError","adminRequired","quickAdd","date","facture","releve","CopyIcon","xmlns","className","viewBox","fill","children","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","ClipboardIcon","clipRule","_c2","InputField","field","isAdminMode","onChange","onCopy","getInputClassName","baseClass","stateClass","adminOnlyEdit","copyable","label","type","name","key","value","e","target","readOnly","onClick","title","toLowerCase","_c3","propTypes","object","bool","isRequired","func","TextAreaField","onInsertText","showNotification","textareaClassName","handleQuickAction","text","message","prepend","rows","today","Date","toLocaleDateString","year","month","day","_c4","DetailTacheAdjointe","task","onUpdateTask","onAdminModeToggle","onDeleteTask","_s","editedTask","setEditedTask","id","fields","procedureCheckStates","setProcedureCheckStates","handleFieldChange","prev","map","handleCopy","navigator","clipboard","window","isSecureContext","writeText","err","console","textarea","document","createElement","style","position","body","appendChild","focus","select","execCommand","removeChild","handleSave","insertTextIntoNote","textToInsert","noteField","find","f","currentValue","newValue","handleProcedureCheckChange","index","prevStates","taskFields","modelNumber","fullTemplateName","attachmentName","noteTemplate","procedure","procedureContent","placeholder","hasCheckboxes","String","split","filter","line","trim","lineKey","checked","_c5","$RefreshReg$"],"sources":["D:/CODE/covalen-app/src/components/DetailTacheAdjointe.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\n// Constantes pour les classes CSS réutilisables\nconst CSS_CLASSES = {\n    button: {\n        primary: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-5 rounded-lg shadow-md flex items-center justify-center transition-all duration-300\",\n        secondary: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",\n        admin: \"bg-gray-700 hover:bg-gray-800 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",\n        save: \"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",\n        delete: \"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\"\n    },\n    input: {\n        base: \"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300\",\n        readonly: \"bg-gray-100\",\n        editable: \"bg-white\"\n    }\n};\n\n// Messages d'aide\nconst MESSAGES = {\n    copy: {\n        success: 'Copié dans le presse-papiers !',\n        error: 'Échec de la copie. Veuillez copier manuellement.',\n        fallbackError: 'Erreur de copie (fallback):'\n    },\n    save: {\n        success: 'Modifications sauvegardées !',\n        adminRequired: 'Vous devez être en Mode Admin pour sauvegarder les modifications structurelles.'\n    },\n    quickAdd: {\n        date: 'Date ajoutée à la note !',\n        facture: 'Facture ajoutée à la note !',\n        releve: 'Relevé ajouté à la note !'\n    }\n};\n\nconst CopyIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n        <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n    </svg>\n);\n\nconst ClipboardIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path d=\"M8 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V6h1a1 1 0 100-2H7V3a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n    </svg>\n);\n\n// Composant pour les champs de saisie réutilisables\nconst InputField = ({ field, isAdminMode, onChange, onCopy }) => {\n    if (!field) return null;\n\n    const getInputClassName = () => {\n        const baseClass = CSS_CLASSES.input.base;\n        const stateClass = field.adminOnlyEdit && !isAdminMode ? CSS_CLASSES.input.readonly : CSS_CLASSES.input.editable;\n\n        if (field.copyable) {\n            return `flex-grow p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 ${stateClass}`;\n        }\n\n        return `${baseClass} ${stateClass}`;\n    };\n\n    return (\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">{field.label}:</label>\n            <div className=\"flex items-center space-x-2\">\n                <input\n                    type=\"text\"\n                    name={field.key}\n                    value={field.value}\n                    onChange={(e) => onChange(field.key, e.target.value)}\n                    readOnly={field.adminOnlyEdit && !isAdminMode}\n                    className={getInputClassName()}\n                />\n                {field.copyable && (\n                    <button\n                        onClick={() => onCopy(field.value)}\n                        className={CSS_CLASSES.button.primary}\n                        title={`Copier ${field.label.toLowerCase()}`}\n                    >\n                        <CopyIcon />\n                        Copier{field.key === 'attachmentName' ? ' PJ' : ''}\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nInputField.propTypes = {\n    field: PropTypes.object,\n    isAdminMode: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onCopy: PropTypes.func.isRequired,\n};\n\n// Composant pour les zones de texte avec actions rapides\nconst TextAreaField = ({ field, isAdminMode, onChange, onCopy, onInsertText, showNotification }) => {\n    if (!field) return null;\n\n    const textareaClassName = `w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 resize-y ${field.adminOnlyEdit && !isAdminMode ? CSS_CLASSES.input.readonly : CSS_CLASSES.input.editable}`;\n\n    const handleQuickAction = (text, message, prepend = false) => {\n        onInsertText(text, prepend);\n        showNotification(message, 'info');\n    };\n\n    return (\n        <div className=\"mb-4 w-full\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">{field.label}:</label>\n            <textarea\n                name={field.key}\n                value={field.value}\n                onChange={(e) => onChange(field.key, e.target.value)}\n                readOnly={field.adminOnlyEdit && !isAdminMode}\n                rows=\"4\"\n                className={textareaClassName}\n            />\n            {field.copyable && (\n                <div className=\"flex justify-between items-center mt-3 flex-wrap gap-2\">\n                    <button\n                        onClick={() => onCopy(field.value)}\n                        className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg shadow-md flex items-center justify-center transition-all duration-300\"\n                        title=\"Copier la note complète\"\n                    >\n                        <ClipboardIcon />\n                        Copier Note\n                    </button>\n                    <div className=\"flex flex-wrap gap-2\">\n                        <button\n                            onClick={() => {\n                                const today = new Date().toLocaleDateString('fr-CA', { year: 'numeric', month: '2-digit', day: '2-digit' });\n                                handleQuickAction(`${today}\\n`, MESSAGES.quickAdd.date, true);\n                            }}\n                            className={CSS_CLASSES.button.secondary}\n                            title=\"Ajouter la date actuelle à la note\"\n                        >\n                            + Date\n                        </button>\n                        <button\n                            onClick={() => handleQuickAction(' + Facture', MESSAGES.quickAdd.facture)}\n                            className={CSS_CLASSES.button.secondary}\n                            title=\"Ajouter ' + Facture' à la note\"\n                        >\n                            + Facture\n                        </button>\n                        <button\n                            onClick={() => handleQuickAction(' + Relevé', MESSAGES.quickAdd.releve)}\n                            className={CSS_CLASSES.button.secondary}\n                            title=\"Ajouter ' + Relevé' à la note\"\n                        >\n                            + Relevé\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nTextAreaField.propTypes = {\n    field: PropTypes.object,\n    isAdminMode: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onCopy: PropTypes.func.isRequired,\n    onInsertText: PropTypes.func.isRequired,\n    showNotification: PropTypes.func.isRequired,\n};\n\nconst DetailTacheAdjointe = ({ task = null, onUpdateTask, onAdminModeToggle, isAdminMode, onDeleteTask, showNotification }) => {\n    const [editedTask, setEditedTask] = useState(task || { id: null, name: '', fields: [] });\n    const [procedureCheckStates, setProcedureCheckStates] = useState({});\n\n    useEffect(() => {\n        setEditedTask(task || { id: null, name: '', fields: [] });\n        setProcedureCheckStates({});\n    }, [task]);\n\n    const handleFieldChange = (key, value) => {\n        setEditedTask((prev) => ({\n            ...prev,\n            fields: prev.fields.map((field) =>\n                field.key === key ? { ...field, value: value } : field\n            ),\n        }));\n    };\n\n    // Fonction optimisée pour la copie avec gestion d'erreur améliorée\n    const handleCopy = useCallback(async (text) => {\n        if (navigator.clipboard && window.isSecureContext) {\n            try {\n                await navigator.clipboard.writeText(text);\n                showNotification(MESSAGES.copy.success, 'success');\n            } catch (err) {\n                console.error('Erreur de copie:', err);\n                showNotification(MESSAGES.copy.error, 'error');\n            }\n        } else {\n            // Fallback pour les navigateurs plus anciens ou les contextes non-sécurisés\n            const textarea = document.createElement('textarea');\n            textarea.value = text;\n            textarea.style.position = 'fixed';\n            document.body.appendChild(textarea);\n            textarea.focus();\n            textarea.select();\n            try {\n                // Note: document.execCommand est obsolète mais nécessaire comme fallback\n                document.execCommand('copy');\n                showNotification(MESSAGES.copy.success, 'success');\n            } catch (err) {\n                console.error(MESSAGES.copy.fallbackError, err);\n                showNotification(MESSAGES.copy.error, 'error');\n            } finally {\n                document.body.removeChild(textarea);\n            }\n        }\n    }, [showNotification]);\n\n    const handleSave = useCallback(() => {\n        if (isAdminMode) {\n            onUpdateTask(editedTask);\n            showNotification(MESSAGES.save.success, 'success');\n        } else {\n            showNotification(MESSAGES.save.adminRequired, 'error');\n        }\n    }, [isAdminMode, onUpdateTask, editedTask, showNotification]);\n\n    const insertTextIntoNote = useCallback((textToInsert, prepend = false) => {\n        const noteField = editedTask.fields.find(f => f.key === 'noteTemplate');\n        if (noteField) {\n            const currentValue = noteField.value;\n            const newValue = prepend ? `${textToInsert}${currentValue}` : `${currentValue}${textToInsert}`;\n            handleFieldChange('noteTemplate', newValue);\n        }\n    }, [editedTask.fields]);\n\n    const handleProcedureCheckChange = useCallback((index) => {\n        setProcedureCheckStates(prevStates => ({\n            ...prevStates,\n            [index]: !prevStates[index]\n        }));\n    }, []);\n\n\n    // Extraction des champs avec useMemo pour optimiser les performances\n    const taskFields = useMemo(() => {\n        if (!editedTask?.fields) return {};\n\n        return {\n            modelNumber: editedTask.fields.find(field => field.key === 'modelNumber'),\n            fullTemplateName: editedTask.fields.find(field => field.key === 'fullTemplateName'),\n            attachmentName: editedTask.fields.find(field => field.key === 'attachmentName'),\n            noteTemplate: editedTask.fields.find(field => field.key === 'noteTemplate'),\n            procedure: editedTask.fields.find(field => field.key === 'procedure')\n        };\n    }, [editedTask]);\n\n    // Vérification de l'existence de la tâche\n    if (!task) {\n        return (\n            <div className=\"flex-1 p-8 flex justify-center items-center bg-gray-50 rounded-r-lg\">\n                <p className=\"text-xl text-gray-500\">Sélectionnez une tâche pour voir les détails.</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"flex-1 p-8 bg-gray-50 rounded-r-lg shadow-inner overflow-y-auto max-h-[calc(100vh-120px)] scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-50\">\n            <div className=\"flex justify-between items-center mb-6 border-b-2 border-gray-200 pb-4\">\n                <h2 className=\"text-3xl font-extrabold text-blue-700\">{task.name}</h2>\n                <button\n                    onClick={() => onAdminModeToggle(!isAdminMode)}\n                    className={CSS_CLASSES.button.admin}\n                    title={isAdminMode ? 'Quitter Mode Admin' : 'Activer Mode Admin (Édition)'}\n                >\n                    {isAdminMode ? 'Quitter Admin' : 'Mode Admin'}\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\n                <InputField\n                    field={taskFields.modelNumber}\n                    isAdminMode={isAdminMode}\n                    onChange={handleFieldChange}\n                    onCopy={handleCopy}\n                />\n                <InputField\n                    field={taskFields.fullTemplateName}\n                    isAdminMode={isAdminMode}\n                    onChange={handleFieldChange}\n                    onCopy={handleCopy}\n                />\n            </div>\n\n            <div className=\"mb-8 p-6 bg-white rounded-lg shadow-md\">\n                {taskFields.attachmentName && (\n                    <div className=\"mb-4 w-full\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">{taskFields.attachmentName.label}:</label>\n                        <div className=\"flex items-center space-x-2\">\n                            <input\n                                type=\"text\"\n                                name={taskFields.attachmentName.key}\n                                value={taskFields.attachmentName.value}\n                                onChange={(e) => handleFieldChange(taskFields.attachmentName.key, e.target.value)}\n                                readOnly={taskFields.attachmentName.adminOnlyEdit && !isAdminMode}\n                                className={`flex-grow p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 ${taskFields.attachmentName.adminOnlyEdit && !isAdminMode ? CSS_CLASSES.input.readonly : CSS_CLASSES.input.editable}`}\n                            />\n                            {taskFields.attachmentName.copyable && (\n                                <button\n                                    onClick={() => handleCopy(taskFields.attachmentName.value)}\n                                    className={CSS_CLASSES.button.primary}\n                                    title=\"Copier le nom de la pièce jointe\"\n                                >\n                                    <CopyIcon />\n                                    Copier PJ\n                                </button>\n                            )}\n                        </div>\n                    </div>\n                )}\n                <TextAreaField\n                    field={taskFields.noteTemplate}\n                    isAdminMode={isAdminMode}\n                    onChange={handleFieldChange}\n                    onCopy={handleCopy}\n                    onInsertText={insertTextIntoNote}\n                    showNotification={showNotification}\n                />\n            </div>\n\n            {taskFields.procedure && (() => {\n                let procedureContent;\n                if (isAdminMode) {\n                    procedureContent = (\n                        <textarea\n                            name={taskFields.procedure.key}\n                            value={taskFields.procedure.value}\n                            onChange={(e) => handleFieldChange(taskFields.procedure.key, e.target.value)}\n                            rows=\"8\"\n                            className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 resize-y bg-white\"\n                            placeholder=\"Décrivez ici la procédure complète pour cette tâche (chaque ligne sera une case à cocher si l'option est activée)...\"\n                        ></textarea>\n                    );\n                } else if (taskFields.procedure.hasCheckboxes) {\n                    procedureContent = (\n                        <ul className=\"list-none p-0 m-0 space-y-2\">\n                            {String(taskFields.procedure.value).split('\\n').filter(line => line.trim() !== '').map((line, index) => {\n                                const lineKey = `${taskFields.procedure.key}-${index}-${line.trim()}`;\n                                return (\n                                    <li key={lineKey} className=\"flex items-center text-gray-800\">\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={procedureCheckStates[index] || false}\n                                            onChange={() => handleProcedureCheckChange(index)}\n                                            className=\"mr-2 h-5 w-5 text-blue-600 rounded focus:ring-blue-500\"\n                                        />\n                                        <span className={procedureCheckStates[index] ? 'line-through text-gray-500' : ''}>\n                                            {line.trim()}\n                                        </span>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    );\n                } else {\n                    procedureContent = (\n                        <div className=\"prose max-w-none text-gray-800 whitespace-pre-wrap p-3 border border-gray-200 rounded-lg bg-gray-50\">\n                            {taskFields.procedure.value}\n                        </div>\n                    );\n                }\n                return (\n                    <div className=\"mb-8 p-6 bg-white rounded-lg shadow-md\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">{taskFields.procedure.label}:</label>\n                        {procedureContent}\n                    </div>\n                );\n            })()}\n\n            {isAdminMode && (\n                <div className=\"flex space-x-3 mt-4\">\n                    <button\n                        onClick={handleSave}\n                        className={CSS_CLASSES.button.save}\n                    >\n                        Sauvegarder les modifications\n                    </button>\n                    <button\n                        onClick={() => onDeleteTask(task.id)}\n                        className={CSS_CLASSES.button.delete}\n                    >\n                        Supprimer la tâche\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nDetailTacheAdjointe.propTypes = {\n    task: PropTypes.object,\n    onUpdateTask: PropTypes.func.isRequired,\n    onAdminModeToggle: PropTypes.func.isRequired,\n    isAdminMode: PropTypes.bool.isRequired,\n    onDeleteTask: PropTypes.func.isRequired,\n    showNotification: PropTypes.func.isRequired,\n};\n\nexport default DetailTacheAdjointe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}