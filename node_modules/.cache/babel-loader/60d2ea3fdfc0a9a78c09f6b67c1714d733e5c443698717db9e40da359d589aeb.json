{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\covalen-app\\\\src\\\\components\\\\DashboardMaison.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\n// Types de drag & drop\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  TASK: 'task'\n};\n\n// Composant Task draggable\nconst DraggableTask = ({\n  task,\n  category,\n  index,\n  onTaskClick,\n  onMoveTask,\n  onReorderTask\n}) => {\n  _s();\n  var _task$fields, _task$fields$find;\n  const [{\n    isDragging\n  }, dragRef] = useDrag({\n    type: ItemTypes.TASK,\n    item: {\n      type: ItemTypes.TASK,\n      task,\n      category,\n      index,\n      sourceCategory: category,\n      sourceIndex: index\n    },\n    begin: () => {\n      console.log('🚀 Drag started:', {\n        task: task.name,\n        category,\n        index\n      });\n    },\n    end: (item, monitor) => {\n      console.log('🏁 Drag ended');\n      // Nettoyage automatique des états si nécessaire\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dragRef,\n    className: `task-item clickable draggable enhanced-drag compact ${isDragging ? 'dragging' : ''}`,\n    onClick: () => !isDragging && onTaskClick(task),\n    title: \"\\uD83D\\uDDB1\\uFE0F Glissez pour r\\xE9organiser ou changer de cat\\xE9gorie\",\n    style: {\n      opacity: isDragging ? 0.6 : 1\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content-compact\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"drag-handle enhanced-handle compact-handle\",\n        title: \"R\\xE9organiser\",\n        children: \"\\u22EE\\u22EE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-number\",\n          children: (_task$fields = task.fields) === null || _task$fields === void 0 ? void 0 : (_task$fields$find = _task$fields.find(f => f.key === 'modelNumber')) === null || _task$fields$find === void 0 ? void 0 : _task$fields$find.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-name-compact\",\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n// Zone de drop entre les tâches\n_s(DraggableTask, \"PitWq9MEidg2fcoeQ58axdvz0w4=\", false, function () {\n  return [useDrag];\n});\n_c = DraggableTask;\nconst DropZone = ({\n  category,\n  index,\n  onMoveTask,\n  onReorderTask,\n  isLast = false\n}) => {\n  _s2();\n  const [{\n    isOver,\n    canDrop\n  }, dropRef] = useDrop({\n    accept: ItemTypes.TASK,\n    drop: (item, monitor) => {\n      console.log('🎯 Drop on:', {\n        category,\n        index,\n        item\n      });\n      const {\n        sourceCategory,\n        sourceIndex,\n        task\n      } = item;\n      if (sourceCategory !== category) {\n        // Déplacement entre catégories\n        console.log('🔄 Moving task between categories:', sourceCategory, '→', category);\n        onMoveTask(task, category);\n      } else {\n        // Réorganisation dans la même catégorie\n        let targetIndex = index;\n\n        // Ajustement d'index pour éviter les comportements aléatoires\n        if (sourceIndex < index) {\n          targetIndex = index - 1;\n        }\n        if (sourceIndex !== targetIndex && targetIndex >= 0) {\n          console.log('🔄 Reordering task:', sourceIndex, '→', targetIndex);\n          onReorderTask(category, sourceIndex, targetIndex);\n        }\n      }\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const showDropIndicator = isOver && canDrop;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dropRef,\n    className: `task-drop-zone-vertical ${showDropIndicator ? 'drag-over' : ''} ${isLast ? 'final' : ''}`,\n    title: isLast ? \"Déposez ici pour ajouter à la fin\" : \"Déposez ici pour insérer avant cette tâche\",\n    children: [showDropIndicator && !isLast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-indicator\",\n      children: \"\\u25BC Ins\\xE9rer ici \\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), showDropIndicator && isLast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-indicator final\",\n      children: \"\\u2B07\\uFE0F Ajouter \\xE0 la fin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n// Zone de drop pour catégories vides\n_s2(DropZone, \"FzF8SlU/jX+/Arn9Cg8jR1w1M84=\", false, function () {\n  return [useDrop];\n});\n_c2 = DropZone;\nconst EmptyDropZone = ({\n  category,\n  onMoveTask\n}) => {\n  _s3();\n  const [{\n    isOver,\n    canDrop\n  }, dropRef] = useDrop({\n    accept: ItemTypes.TASK,\n    drop: (item, monitor) => {\n      console.log('🎯 Drop on empty category:', category);\n      const {\n        task\n      } = item;\n      onMoveTask(task, category);\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const showDropIndicator = isOver && canDrop;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dropRef,\n    className: `empty-category-drop-zone grid-full-width ${showDropIndicator ? 'drag-over' : ''}`,\n    children: [\"\\uD83D\\uDCC2 Glissez une t\\xE2che ici pour la d\\xE9placer dans \\\"\", category, \"\\\"\", showDropIndicator && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty-drop-indicator\",\n      children: [\"\\u2728 Rel\\xE2chez pour ajouter \\xE0 \\\"\", category, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s3(EmptyDropZone, \"FzF8SlU/jX+/Arn9Cg8jR1w1M84=\", false, function () {\n  return [useDrop];\n});\n_c3 = EmptyDropZone;\nconst DashboardMaison = ({\n  appData,\n  onTabChange,\n  onTaskSelect,\n  onAdminPanel,\n  isAdminMode,\n  onMoveTask,\n  onReorderCategories,\n  onReorderTasksInCategory\n}) => {\n  _s4();\n  const [categoryStates, setCategoryStates] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const getAllTasksByCategory = () => {\n    const allCategories = {};\n\n    // Parcourir tous les onglets sauf 'Maison' et 'Admin'\n    Object.keys(appData).forEach(tabName => {\n      if (tabName !== 'Maison' && tabName !== 'Admin') {\n        const tasks = appData[tabName] || [];\n        tasks.forEach(task => {\n          const category = task.category || 'Autres';\n          if (!allCategories[category]) {\n            allCategories[category] = [];\n          }\n          allCategories[category].push({\n            ...task,\n            tabName\n          });\n        });\n      }\n    });\n    return allCategories;\n  };\n  const allTasksByCategory = getAllTasksByCategory();\n\n  // Filtrer les tâches selon le terme de recherche\n  const filteredCategories = useMemo(() => {\n    if (!searchTerm) return allTasksByCategory;\n    const filtered = {};\n    const searchLower = searchTerm.toLowerCase();\n    const taskMatchesSearch = task => {\n      var _task$fields2, _task$fields2$find;\n      const modelNumber = ((_task$fields2 = task.fields) === null || _task$fields2 === void 0 ? void 0 : (_task$fields2$find = _task$fields2.find(f => f.key === 'modelNumber')) === null || _task$fields2$find === void 0 ? void 0 : _task$fields2$find.value) || '';\n      return task.name.toLowerCase().includes(searchLower) || modelNumber.toLowerCase().includes(searchLower);\n    };\n    Object.keys(allTasksByCategory).forEach(category => {\n      const matchingTasks = allTasksByCategory[category].filter(taskMatchesSearch);\n      const categoryMatches = category.toLowerCase().includes(searchLower);\n      if (matchingTasks.length > 0 || categoryMatches) {\n        filtered[category] = matchingTasks;\n      }\n    });\n    return filtered;\n  }, [allTasksByCategory, searchTerm]);\n  const categorizedTasks = filteredCategories;\n  const handleToggleCategory = (category, event) => {\n    event.stopPropagation();\n    setCategoryStates(prev => ({\n      ...prev,\n      [category]: !prev[category]\n    }));\n  };\n  const handleTaskClick = task => {\n    // Naviguer vers l'onglet et sélectionner la tâche\n    onTabChange(task.tabName);\n    onTaskSelect(task);\n  };\n  const getCategoryIcon = isOpen => {\n    return isOpen ? '▼' : '▶';\n  };\n  const getGoToIcon = () => {\n    return '→';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Covalen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"welcome-message\",\n      children: \"Bienvenue sur votre tableau de bord centralis\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), isAdminMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-dashboard-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-banner\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-banner-text\",\n          children: \"Mode Admin Actif sur le Dashboard.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"admin-manage-btn\",\n          onClick: onAdminPanel,\n          children: \"G\\xE9rer les Onglets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overview-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"overview-title\",\n        children: \"Vue d'overview des T\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-icon\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Rechercher une t\\xE2che, cat\\xE9gorie ou num\\xE9ro...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-clear\",\n            onClick: () => setSearchTerm(''),\n            title: \"Effacer la recherche\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-hints\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-hint\",\n            children: \"\\uD83D\\uDCA1 Raccourci: Ctrl+/ pour rechercher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results-info\",\n          children: Object.keys(categorizedTasks).length === 0 ? `Aucun résultat pour \"${searchTerm}\"` : `${Object.values(categorizedTasks).flat().length} résultat(s) trouvé(s)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tasks-label\",\n            children: \"T\\xE2ches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), Object.keys(categorizedTasks).map(category => {\n          var _categoryStates$categ;\n          const isOpen = (_categoryStates$categ = categoryStates[category]) !== null && _categoryStates$categ !== void 0 ? _categoryStates$categ : true;\n          const tasks = categorizedTasks[category];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `category-header ${isAdminMode ? 'admin-mode' : ''}`,\n              onClick: e => handleToggleCategory(category, e),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-left\",\n                children: [isAdminMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"drag-handle\",\n                  children: \"\\u22EE\\u22EE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-toggle\",\n                  children: getCategoryIcon(isOpen)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-name\",\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 41\n                }, this), isAdminMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"task-count\",\n                  children: [\"(\", tasks.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"category-goto\",\n                children: getGoToIcon()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 33\n            }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tasks-grid\",\n              children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyDropZone, {\n                category: category,\n                onMoveTask: onMoveTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-grid-item\",\n                  children: [/*#__PURE__*/_jsxDEV(DropZone, {\n                    category: category,\n                    index: index,\n                    onMoveTask: onMoveTask,\n                    onReorderTask: onReorderTasksInCategory\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(DraggableTask, {\n                    task: task,\n                    category: category,\n                    index: index,\n                    onTaskClick: handleTaskClick,\n                    onMoveTask: onMoveTask,\n                    onReorderTask: onReorderTasksInCategory\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 57\n                  }, this)]\n                }, `task-wrapper-${task.tabName}-${task.id}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 53\n                }, this)), /*#__PURE__*/_jsxDEV(DropZone, {\n                  category: category,\n                  index: tasks.length,\n                  onMoveTask: onMoveTask,\n                  onReorderTask: onReorderTasksInCategory,\n                  isLast: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 37\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s4(DashboardMaison, \"CpYNy2HWM0JPSBJr0HpkNKTxMA4=\");\n_c4 = DashboardMaison;\nexport default DashboardMaison;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"DraggableTask\");\n$RefreshReg$(_c2, \"DropZone\");\n$RefreshReg$(_c3, \"EmptyDropZone\");\n$RefreshReg$(_c4, \"DashboardMaison\");","map":{"version":3,"names":["React","useState","useMemo","useDrag","useDrop","jsxDEV","_jsxDEV","Fragment","_Fragment","ItemTypes","TASK","DraggableTask","task","category","index","onTaskClick","onMoveTask","onReorderTask","_s","_task$fields","_task$fields$find","isDragging","dragRef","type","item","sourceCategory","sourceIndex","begin","console","log","name","end","monitor","collect","ref","className","onClick","title","style","opacity","children","fileName","_jsxFileName","lineNumber","columnNumber","fields","find","f","key","value","_c","DropZone","isLast","_s2","isOver","canDrop","dropRef","accept","drop","targetIndex","showDropIndicator","_c2","EmptyDropZone","_s3","_c3","DashboardMaison","appData","onTabChange","onTaskSelect","onAdminPanel","isAdminMode","onReorderCategories","onReorderTasksInCategory","_s4","categoryStates","setCategoryStates","searchTerm","setSearchTerm","getAllTasksByCategory","allCategories","Object","keys","forEach","tabName","tasks","push","allTasksByCategory","filteredCategories","filtered","searchLower","toLowerCase","taskMatchesSearch","_task$fields2","_task$fields2$find","modelNumber","includes","matchingTasks","filter","categoryMatches","length","categorizedTasks","handleToggleCategory","event","stopPropagation","prev","handleTaskClick","getCategoryIcon","isOpen","getGoToIcon","placeholder","onChange","e","target","values","flat","map","_categoryStates$categ","id","_c4","$RefreshReg$"],"sources":["D:/CODE/covalen-app/src/components/DashboardMaison.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\n\n// Types de drag & drop\nconst ItemTypes = {\n    TASK: 'task'\n};\n\n// Composant Task draggable\nconst DraggableTask = ({ task, category, index, onTaskClick, onMoveTask, onReorderTask }) => {\n    const [{ isDragging }, dragRef] = useDrag({\n        type: ItemTypes.TASK,\n        item: { \n            type: ItemTypes.TASK, \n            task, \n            category, \n            index,\n            sourceCategory: category,\n            sourceIndex: index\n        },\n        begin: () => {\n            console.log('🚀 Drag started:', { task: task.name, category, index });\n        },\n        end: (item, monitor) => {\n            console.log('🏁 Drag ended');\n            // Nettoyage automatique des états si nécessaire\n        },\n        collect: (monitor) => ({\n            isDragging: monitor.isDragging(),\n        }),\n    });\n\n    return (\n        <div\n            ref={dragRef}\n            className={`task-item clickable draggable enhanced-drag compact ${isDragging ? 'dragging' : ''}`}\n            onClick={() => !isDragging && onTaskClick(task)}\n            title=\"🖱️ Glissez pour réorganiser ou changer de catégorie\"\n            style={{ opacity: isDragging ? 0.6 : 1 }}\n        >\n            <div className=\"task-content-compact\">\n                <span className=\"drag-handle enhanced-handle compact-handle\" title=\"Réorganiser\">\n                    ⋮⋮\n                </span>\n                <div className=\"task-info\">\n                    <span className=\"task-number\">\n                        {task.fields?.find(f => f.key === 'modelNumber')?.value}\n                    </span>\n                    <span className=\"task-name-compact\">\n                        {task.name}\n                    </span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n// Zone de drop entre les tâches\nconst DropZone = ({ category, index, onMoveTask, onReorderTask, isLast = false }) => {\n    const [{ isOver, canDrop }, dropRef] = useDrop({\n        accept: ItemTypes.TASK,\n        drop: (item, monitor) => {\n            console.log('🎯 Drop on:', { category, index, item });\n            \n            const { sourceCategory, sourceIndex, task } = item;\n            \n            if (sourceCategory !== category) {\n                // Déplacement entre catégories\n                console.log('🔄 Moving task between categories:', sourceCategory, '→', category);\n                onMoveTask(task, category);\n            } else {\n                // Réorganisation dans la même catégorie\n                let targetIndex = index;\n                \n                // Ajustement d'index pour éviter les comportements aléatoires\n                if (sourceIndex < index) {\n                    targetIndex = index - 1;\n                }\n                \n                if (sourceIndex !== targetIndex && targetIndex >= 0) {\n                    console.log('🔄 Reordering task:', sourceIndex, '→', targetIndex);\n                    onReorderTask(category, sourceIndex, targetIndex);\n                }\n            }\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const showDropIndicator = isOver && canDrop;\n\n    return (\n        <div\n            ref={dropRef}\n            className={`task-drop-zone-vertical ${showDropIndicator ? 'drag-over' : ''} ${isLast ? 'final' : ''}`}\n            title={isLast ? \"Déposez ici pour ajouter à la fin\" : \"Déposez ici pour insérer avant cette tâche\"}\n        >\n            {showDropIndicator && !isLast && (\n                <div className=\"drop-indicator\">\n                    ▼ Insérer ici ▼\n                </div>\n            )}\n            {showDropIndicator && isLast && (\n                <div className=\"drop-indicator final\">\n                    ⬇️ Ajouter à la fin\n                </div>\n            )}\n        </div>\n    );\n};\n\n// Zone de drop pour catégories vides\nconst EmptyDropZone = ({ category, onMoveTask }) => {\n    const [{ isOver, canDrop }, dropRef] = useDrop({\n        accept: ItemTypes.TASK,\n        drop: (item, monitor) => {\n            console.log('🎯 Drop on empty category:', category);\n            const { task } = item;\n            onMoveTask(task, category);\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop(),\n        }),\n    });\n\n    const showDropIndicator = isOver && canDrop;\n\n    return (\n        <div\n            ref={dropRef}\n            className={`empty-category-drop-zone grid-full-width ${showDropIndicator ? 'drag-over' : ''}`}\n        >\n            📂 Glissez une tâche ici pour la déplacer dans \"{category}\"\n            {showDropIndicator && (\n                <div className=\"empty-drop-indicator\">\n                    ✨ Relâchez pour ajouter à \"{category}\"\n                </div>\n            )}\n        </div>\n    );\n};\n\nconst DashboardMaison = ({ appData, onTabChange, onTaskSelect, onAdminPanel, isAdminMode, onMoveTask, onReorderCategories, onReorderTasksInCategory }) => {\n    const [categoryStates, setCategoryStates] = useState({});\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const getAllTasksByCategory = () => {\n        const allCategories = {};\n\n        // Parcourir tous les onglets sauf 'Maison' et 'Admin'\n        Object.keys(appData).forEach(tabName => {\n            if (tabName !== 'Maison' && tabName !== 'Admin') {\n                const tasks = appData[tabName] || [];\n                tasks.forEach(task => {\n                    const category = task.category || 'Autres';\n                    if (!allCategories[category]) {\n                        allCategories[category] = [];\n                    }\n                    allCategories[category].push({\n                        ...task,\n                        tabName\n                    });\n                });\n            }\n        });\n\n        return allCategories;\n    };\n\n    const allTasksByCategory = getAllTasksByCategory();\n\n    // Filtrer les tâches selon le terme de recherche\n    const filteredCategories = useMemo(() => {\n        if (!searchTerm) return allTasksByCategory;\n\n        const filtered = {};\n        const searchLower = searchTerm.toLowerCase();\n\n        const taskMatchesSearch = (task) => {\n            const modelNumber = task.fields?.find(f => f.key === 'modelNumber')?.value || '';\n            return (\n                task.name.toLowerCase().includes(searchLower) ||\n                modelNumber.toLowerCase().includes(searchLower)\n            );\n        };\n\n        Object.keys(allTasksByCategory).forEach(category => {\n            const matchingTasks = allTasksByCategory[category].filter(taskMatchesSearch);\n            const categoryMatches = category.toLowerCase().includes(searchLower);\n\n            if (matchingTasks.length > 0 || categoryMatches) {\n                filtered[category] = matchingTasks;\n            }\n        });\n\n        return filtered;\n    }, [allTasksByCategory, searchTerm]);\n\n    const categorizedTasks = filteredCategories;\n\n    const handleToggleCategory = (category, event) => {\n        event.stopPropagation();\n        setCategoryStates(prev => ({\n            ...prev,\n            [category]: !prev[category]\n        }));\n    };\n\n    const handleTaskClick = (task) => {\n        // Naviguer vers l'onglet et sélectionner la tâche\n        onTabChange(task.tabName);\n        onTaskSelect(task);\n    };\n\n    const getCategoryIcon = (isOpen) => {\n        return isOpen ? '▼' : '▶';\n    };\n\n    const getGoToIcon = () => {\n        return '→';\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            {/* En-tête principal */}\n            <div className=\"dashboard-header\">\n                <h1 className=\"dashboard-title\">Covalen</h1>\n            </div>\n\n            {/* Message de bienvenue */}\n            <p className=\"welcome-message\">\n                Bienvenue sur votre tableau de bord centralisé.\n            </p>\n\n            {/* Section Admin - seulement visible en mode admin */}\n            {isAdminMode && (\n                <div className=\"admin-dashboard-section\">\n                    <div className=\"admin-banner\">\n                        <p className=\"admin-banner-text\">Mode Admin Actif sur le Dashboard.</p>\n                        <button className=\"admin-manage-btn\" onClick={onAdminPanel}>\n                            Gérer les Onglets\n                        </button>\n                    </div>\n                </div>\n            )}\n\n            {/* Section Vue d'overview */}\n            <div className=\"overview-section\">\n                <h2 className=\"overview-title\">Vue d'overview des Tâches</h2>\n\n                {/* Barre de recherche */}\n                <div className=\"search-container\">\n                    <div className=\"search-bar\">\n                        <span className=\"search-icon\">🔍</span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Rechercher une tâche, catégorie ou numéro...\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                            className=\"search-input\"\n                        />\n                        {searchTerm && (\n                            <button\n                                className=\"search-clear\"\n                                onClick={() => setSearchTerm('')}\n                                title=\"Effacer la recherche\"\n                            >\n                                ✕\n                            </button>\n                        )}\n                    </div>\n                    <div className=\"search-hints\">\n                        <span className=\"search-hint\">💡 Raccourci: Ctrl+/ pour rechercher</span>\n                    </div>\n                    {searchTerm && (\n                        <div className=\"search-results-info\">\n                            {Object.keys(categorizedTasks).length === 0\n                                ? `Aucun résultat pour \"${searchTerm}\"`\n                                : `${Object.values(categorizedTasks).flat().length} résultat(s) trouvé(s)`\n                            }\n                        </div>\n                    )}\n                </div>\n\n                {/* Conteneur des catégories */}\n                <div className=\"categories-container\">\n                    <div className=\"tasks-header\">\n                        <span className=\"tasks-label\">Tâches</span>\n                    </div>\n\n                    {/* Liste des catégories */}\n                    {Object.keys(categorizedTasks).map(category => {\n                        const isOpen = categoryStates[category] ?? true;\n                        const tasks = categorizedTasks[category];\n\n                        return (\n                            <div key={category} className=\"category-section\">\n                                {/* En-tête de catégorie */}\n                                <div\n                                    className={`category-header ${isAdminMode ? 'admin-mode' : ''}`}\n                                    onClick={(e) => handleToggleCategory(category, e)}\n                                >\n                                    <div className=\"category-left\">\n                                        {isAdminMode && <span className=\"drag-handle\">⋮⋮</span>}\n                                        <span className=\"category-toggle\">\n                                            {getCategoryIcon(isOpen)}\n                                        </span>\n                                        <span className=\"category-name\">{category}</span>\n                                        {isAdminMode && (\n                                            <span className=\"task-count\">({tasks.length})</span>\n                                        )}\n                                    </div>\n                                    <span className=\"category-goto\">{getGoToIcon()}</span>\n                                </div>\n\n                                {/* Liste des tâches en grille 4 colonnes (si ouvert) */}\n                                {isOpen && (\n                                    <div className=\"tasks-grid\">\n                                        {tasks.length === 0 ? (\n                                            <EmptyDropZone \n                                                category={category} \n                                                onMoveTask={onMoveTask}\n                                            />\n                                        ) : (\n                                            <>\n                                                {tasks.map((task, index) => (\n                                                    <div key={`task-wrapper-${task.tabName}-${task.id}`} className=\"task-grid-item\">\n                                                        {/* Zone de drop avant la tâche */}\n                                                        <DropZone\n                                                            category={category}\n                                                            index={index}\n                                                            onMoveTask={onMoveTask}\n                                                            onReorderTask={onReorderTasksInCategory}\n                                                        />\n                                                        \n                                                        {/* Tâche draggable */}\n                                                        <DraggableTask\n                                                            task={task}\n                                                            category={category}\n                                                            index={index}\n                                                            onTaskClick={handleTaskClick}\n                                                            onMoveTask={onMoveTask}\n                                                            onReorderTask={onReorderTasksInCategory}\n                                                        />\n                                                    </div>\n                                                ))}\n                                                \n                                                {/* Zone de drop finale */}\n                                                <DropZone\n                                                    category={category}\n                                                    index={tasks.length}\n                                                    onMoveTask={onMoveTask}\n                                                    onReorderTask={onReorderTasksInCategory}\n                                                    isLast={true}\n                                                />\n                                            </>\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardMaison;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}