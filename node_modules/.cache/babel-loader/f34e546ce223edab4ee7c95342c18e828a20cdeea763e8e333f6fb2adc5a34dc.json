{"ast":null,"code":"import _objectSpread from\"D:/CODE/covalen-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo,useCallback}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";// Constantes pour les classes CSS réutilisables\nconst CSS_CLASSES={button:{primary:\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-5 rounded-lg shadow-md flex items-center justify-center transition-all duration-300\",secondary:\"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",admin:\"bg-gray-700 hover:bg-gray-800 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",save:\"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",delete:\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\"},input:{base:\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300\",readonly:\"bg-gray-100\",editable:\"bg-white\"}};// Messages d'aide\nconst MESSAGES={copy:{success:'Copié dans le presse-papiers !',error:'Échec de la copie. Veuillez copier manuellement.',fallbackError:'Erreur de copie (fallback):'},save:{success:'Modifications sauvegardées !',adminRequired:'Vous devez être en Mode Admin pour sauvegarder les modifications structurelles.'},quickAdd:{date:'Date ajoutée à la note !',facture:'Facture ajoutée à la note !',releve:'Relevé ajouté à la note !'}};const CopyIcon=()=>/*#__PURE__*/_jsxs(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5 mr-1\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\"})]});const ClipboardIcon=()=>/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5 mr-1\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M8 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V6h1a1 1 0 100-2H7V3a1 1 0 00-1-1z\",clipRule:\"evenodd\"})});// Composant pour les champs de saisie réutilisables\nconst InputField=_ref=>{let{field,isAdminMode,onChange,onCopy}=_ref;if(!field)return null;const getInputClassName=()=>{const baseClass=CSS_CLASSES.input.base;const stateClass=field.adminOnlyEdit&&!isAdminMode?CSS_CLASSES.input.readonly:CSS_CLASSES.input.editable;if(field.copyable){return\"flex-grow p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 \".concat(stateClass);}return\"\".concat(baseClass,\" \").concat(stateClass);};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",children:[field.label,\":\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:field.key,value:field.value,onChange:e=>onChange(field.key,e.target.value),readOnly:field.adminOnlyEdit&&!isAdminMode,className:getInputClassName()}),field.copyable&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>onCopy(field.value),className:CSS_CLASSES.button.primary,title:\"Copier \".concat(field.label.toLowerCase()),children:[/*#__PURE__*/_jsx(CopyIcon,{}),\"Copier\",field.key==='attachmentName'?' PJ':'']})]})]});};// Composant pour les zones de texte avec actions rapides\nconst TextAreaField=_ref2=>{let{field,isAdminMode,onChange,onCopy,onInsertText,showNotification}=_ref2;if(!field)return null;const textareaClassName=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 resize-y \".concat(field.adminOnlyEdit&&!isAdminMode?CSS_CLASSES.input.readonly:CSS_CLASSES.input.editable);const handleQuickAction=function(text,message){let prepend=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;onInsertText(text,prepend);showNotification(message,'info');};return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 w-full\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",children:[field.label,\":\"]}),/*#__PURE__*/_jsx(\"textarea\",{name:field.key,value:field.value,onChange:e=>onChange(field.key,e.target.value),readOnly:field.adminOnlyEdit&&!isAdminMode,rows:\"4\",className:textareaClassName}),field.copyable&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mt-3 flex-wrap gap-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>onCopy(field.value),className:\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg shadow-md flex items-center justify-center transition-all duration-300\",title:\"Copier la note compl\\xE8te\",children:[/*#__PURE__*/_jsx(ClipboardIcon,{}),\"Copier Note\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{const today=new Date().toLocaleDateString('fr-CA',{year:'numeric',month:'2-digit',day:'2-digit'});handleQuickAction(\"\".concat(today,\"\\n\"),MESSAGES.quickAdd.date,true);},className:CSS_CLASSES.button.secondary,title:\"Ajouter la date actuelle \\xE0 la note\",children:\"+ Date\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleQuickAction(' + Facture',MESSAGES.quickAdd.facture),className:CSS_CLASSES.button.secondary,title:\"Ajouter ' + Facture' \\xE0 la note\",children:\"+ Facture\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleQuickAction(' + Relevé',MESSAGES.quickAdd.releve),className:CSS_CLASSES.button.secondary,title:\"Ajouter ' + Relev\\xE9' \\xE0 la note\",children:\"+ Relev\\xE9\"})]})]})]});};const DetailTacheAdjointe=_ref3=>{let{task=null,onUpdateTask,onAdminModeToggle,isAdminMode,onDeleteTask,showNotification}=_ref3;const[editedTask,setEditedTask]=useState(task||{id:null,name:'',fields:[]});const[procedureCheckStates,setProcedureCheckStates]=useState({});useEffect(()=>{setEditedTask(task||{id:null,name:'',fields:[]});setProcedureCheckStates({});},[task]);const handleFieldChange=(key,value)=>{setEditedTask(prev=>_objectSpread(_objectSpread({},prev),{},{fields:prev.fields.map(field=>field.key===key?_objectSpread(_objectSpread({},field),{},{value:value}):field)}));};// Fonction optimisée pour la copie avec gestion d'erreur améliorée\nconst handleCopy=useCallback(async text=>{if(navigator.clipboard&&window.isSecureContext){try{await navigator.clipboard.writeText(text);showNotification(MESSAGES.copy.success,'success');}catch(err){console.error('Erreur de copie:',err);showNotification(MESSAGES.copy.error,'error');}}else{// Fallback pour les navigateurs plus anciens ou les contextes non-sécurisés\nconst textarea=document.createElement('textarea');textarea.value=text;textarea.style.position='fixed';document.body.appendChild(textarea);textarea.focus();textarea.select();try{// Note: document.execCommand est obsolète mais nécessaire comme fallback\ndocument.execCommand('copy');showNotification(MESSAGES.copy.success,'success');}catch(err){console.error(MESSAGES.copy.fallbackError,err);showNotification(MESSAGES.copy.error,'error');}finally{document.body.removeChild(textarea);}}},[showNotification]);const handleSave=useCallback(()=>{if(isAdminMode){onUpdateTask(editedTask);showNotification(MESSAGES.save.success,'success');}else{showNotification(MESSAGES.save.adminRequired,'error');}},[isAdminMode,onUpdateTask,editedTask,showNotification]);const insertTextIntoNote=useCallback(function(textToInsert){let prepend=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const noteField=editedTask.fields.find(f=>f.key==='noteTemplate');if(noteField){const currentValue=noteField.value;const newValue=prepend?\"\".concat(textToInsert).concat(currentValue):\"\".concat(currentValue).concat(textToInsert);handleFieldChange('noteTemplate',newValue);}},[editedTask.fields]);const handleProcedureCheckChange=useCallback(index=>{setProcedureCheckStates(prevStates=>_objectSpread(_objectSpread({},prevStates),{},{[index]:!prevStates[index]}));},[]);// Extraction des champs avec useMemo pour optimiser les performances\nconst taskFields=useMemo(()=>{if(!(editedTask!==null&&editedTask!==void 0&&editedTask.fields))return{};return{modelNumber:editedTask.fields.find(field=>field.key==='modelNumber'),fullTemplateName:editedTask.fields.find(field=>field.key==='fullTemplateName'),attachmentName:editedTask.fields.find(field=>field.key==='attachmentName'),noteTemplate:editedTask.fields.find(field=>field.key==='noteTemplate'),procedure:editedTask.fields.find(field=>field.key==='procedure')};},[editedTask]);// Vérification de l'existence de la tâche\nif(!task){return/*#__PURE__*/_jsx(\"div\",{className:\"flex-1 p-8 flex justify-center items-center bg-gray-50 rounded-r-lg\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-xl text-gray-500\",children:\"S\\xE9lectionnez une t\\xE2che pour voir les d\\xE9tails.\"})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 p-8 bg-gray-50 rounded-r-lg shadow-inner overflow-y-auto max-h-[calc(100vh-120px)] scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-50\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-6 border-b-2 border-gray-200 pb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-extrabold text-blue-700\",children:task.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onAdminModeToggle(!isAdminMode),className:CSS_CLASSES.button.admin,title:isAdminMode?'Quitter Mode Admin':'Activer Mode Admin (Édition)',children:isAdminMode?'Quitter Admin':'Mode Admin'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\",children:[/*#__PURE__*/_jsx(InputField,{field:taskFields.modelNumber,isAdminMode:isAdminMode,onChange:handleFieldChange,onCopy:handleCopy}),/*#__PURE__*/_jsx(InputField,{field:taskFields.fullTemplateName,isAdminMode:isAdminMode,onChange:handleFieldChange,onCopy:handleCopy})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 p-6 bg-white rounded-lg shadow-md\",children:[taskFields.attachmentName&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 w-full\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",children:[taskFields.attachmentName.label,\":\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:taskFields.attachmentName.key,value:taskFields.attachmentName.value,onChange:e=>handleFieldChange(taskFields.attachmentName.key,e.target.value),readOnly:taskFields.attachmentName.adminOnlyEdit&&!isAdminMode,className:\"flex-grow p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 \".concat(taskFields.attachmentName.adminOnlyEdit&&!isAdminMode?CSS_CLASSES.input.readonly:CSS_CLASSES.input.editable)}),taskFields.attachmentName.copyable&&/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handleCopy(taskFields.attachmentName.value),className:CSS_CLASSES.button.primary,title:\"Copier le nom de la pi\\xE8ce jointe\",children:[/*#__PURE__*/_jsx(CopyIcon,{}),\"Copier PJ\"]})]})]}),/*#__PURE__*/_jsx(TextAreaField,{field:taskFields.noteTemplate,isAdminMode:isAdminMode,onChange:handleFieldChange,onCopy:handleCopy,onInsertText:insertTextIntoNote,showNotification:showNotification})]}),taskFields.procedure&&(()=>{let procedureContent;if(isAdminMode){procedureContent=/*#__PURE__*/_jsx(\"textarea\",{name:taskFields.procedure.key,value:taskFields.procedure.value,onChange:e=>handleFieldChange(taskFields.procedure.key,e.target.value),rows:\"8\",className:\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 resize-y bg-white\",placeholder:\"D\\xE9crivez ici la proc\\xE9dure compl\\xE8te pour cette t\\xE2che (chaque ligne sera une case \\xE0 cocher si l'option est activ\\xE9e)...\"});}else if(taskFields.procedure.hasCheckboxes){procedureContent=/*#__PURE__*/_jsx(\"ul\",{className:\"list-none p-0 m-0 space-y-2\",children:String(taskFields.procedure.value).split('\\n').filter(line=>line.trim()!=='').map((line,index)=>{const lineKey=\"\".concat(taskFields.procedure.key,\"-\").concat(index,\"-\").concat(line.trim());return/*#__PURE__*/_jsxs(\"li\",{className:\"flex items-center text-gray-800\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:procedureCheckStates[index]||false,onChange:()=>handleProcedureCheckChange(index),className:\"mr-2 h-5 w-5 text-blue-600 rounded focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"span\",{className:procedureCheckStates[index]?'line-through text-gray-500':'',children:line.trim()})]},lineKey);})});}else{procedureContent=/*#__PURE__*/_jsx(\"div\",{className:\"prose max-w-none text-gray-800 whitespace-pre-wrap p-3 border border-gray-200 rounded-lg bg-gray-50\",children:taskFields.procedure.value});}return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 p-6 bg-white rounded-lg shadow-md\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"block text-gray-700 text-sm font-bold mb-2\",children:[taskFields.procedure.label,\":\"]}),procedureContent]});})(),isAdminMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-3 mt-4\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleSave,className:CSS_CLASSES.button.save,children:\"Sauvegarder les modifications\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onDeleteTask(task.id),className:CSS_CLASSES.button.delete,children:\"Supprimer la t\\xE2che\"})]})]});};export default DetailTacheAdjointe;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","jsx","_jsx","jsxs","_jsxs","CSS_CLASSES","button","primary","secondary","admin","save","delete","input","base","readonly","editable","MESSAGES","copy","success","error","fallbackError","adminRequired","quickAdd","date","facture","releve","CopyIcon","xmlns","className","viewBox","fill","children","d","ClipboardIcon","clipRule","InputField","_ref","field","isAdminMode","onChange","onCopy","getInputClassName","baseClass","stateClass","adminOnlyEdit","copyable","concat","label","type","name","key","value","e","target","readOnly","onClick","title","toLowerCase","TextAreaField","_ref2","onInsertText","showNotification","textareaClassName","handleQuickAction","text","message","prepend","arguments","length","undefined","rows","today","Date","toLocaleDateString","year","month","day","DetailTacheAdjointe","_ref3","task","onUpdateTask","onAdminModeToggle","onDeleteTask","editedTask","setEditedTask","id","fields","procedureCheckStates","setProcedureCheckStates","handleFieldChange","prev","_objectSpread","map","handleCopy","navigator","clipboard","window","isSecureContext","writeText","err","console","textarea","document","createElement","style","position","body","appendChild","focus","select","execCommand","removeChild","handleSave","insertTextIntoNote","textToInsert","noteField","find","f","currentValue","newValue","handleProcedureCheckChange","index","prevStates","taskFields","modelNumber","fullTemplateName","attachmentName","noteTemplate","procedure","procedureContent","placeholder","hasCheckboxes","String","split","filter","line","trim","lineKey","checked"],"sources":["D:/CODE/covalen-app/src/components/DetailTacheAdjointe.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\n// Constantes pour les classes CSS réutilisables\nconst CSS_CLASSES = {\n    button: {\n        primary: \"bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-5 rounded-lg shadow-md flex items-center justify-center transition-all duration-300\",\n        secondary: \"bg-purple-600 hover:bg-purple-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",\n        admin: \"bg-gray-700 hover:bg-gray-800 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",\n        save: \"bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\",\n        delete: \"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition-all duration-300\"\n    },\n    input: {\n        base: \"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300\",\n        readonly: \"bg-gray-100\",\n        editable: \"bg-white\"\n    }\n};\n\n// Messages d'aide\nconst MESSAGES = {\n    copy: {\n        success: 'Copié dans le presse-papiers !',\n        error: 'Échec de la copie. Veuillez copier manuellement.',\n        fallbackError: 'Erreur de copie (fallback):'\n    },\n    save: {\n        success: 'Modifications sauvegardées !',\n        adminRequired: 'Vous devez être en Mode Admin pour sauvegarder les modifications structurelles.'\n    },\n    quickAdd: {\n        date: 'Date ajoutée à la note !',\n        facture: 'Facture ajoutée à la note !',\n        releve: 'Relevé ajouté à la note !'\n    }\n};\n\nconst CopyIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n        <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n    </svg>\n);\n\nconst ClipboardIcon = () => (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-1\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path d=\"M8 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V6h1a1 1 0 100-2H7V3a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n    </svg>\n);\n\n// Composant pour les champs de saisie réutilisables\nconst InputField = ({ field, isAdminMode, onChange, onCopy }) => {\n    if (!field) return null;\n\n    const getInputClassName = () => {\n        const baseClass = CSS_CLASSES.input.base;\n        const stateClass = field.adminOnlyEdit && !isAdminMode ? CSS_CLASSES.input.readonly : CSS_CLASSES.input.editable;\n\n        if (field.copyable) {\n            return `flex-grow p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 ${stateClass}`;\n        }\n\n        return `${baseClass} ${stateClass}`;\n    };\n\n    return (\n        <div className=\"bg-white p-6 rounded-lg shadow-md\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">{field.label}:</label>\n            <div className=\"flex items-center space-x-2\">\n                <input\n                    type=\"text\"\n                    name={field.key}\n                    value={field.value}\n                    onChange={(e) => onChange(field.key, e.target.value)}\n                    readOnly={field.adminOnlyEdit && !isAdminMode}\n                    className={getInputClassName()}\n                />\n                {field.copyable && (\n                    <button\n                        onClick={() => onCopy(field.value)}\n                        className={CSS_CLASSES.button.primary}\n                        title={`Copier ${field.label.toLowerCase()}`}\n                    >\n                        <CopyIcon />\n                        Copier{field.key === 'attachmentName' ? ' PJ' : ''}\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n};\n\nInputField.propTypes = {\n    field: PropTypes.object,\n    isAdminMode: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onCopy: PropTypes.func.isRequired,\n};\n\n// Composant pour les zones de texte avec actions rapides\nconst TextAreaField = ({ field, isAdminMode, onChange, onCopy, onInsertText, showNotification }) => {\n    if (!field) return null;\n\n    const textareaClassName = `w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 resize-y ${field.adminOnlyEdit && !isAdminMode ? CSS_CLASSES.input.readonly : CSS_CLASSES.input.editable}`;\n\n    const handleQuickAction = (text, message, prepend = false) => {\n        onInsertText(text, prepend);\n        showNotification(message, 'info');\n    };\n\n    return (\n        <div className=\"mb-4 w-full\">\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\">{field.label}:</label>\n            <textarea\n                name={field.key}\n                value={field.value}\n                onChange={(e) => onChange(field.key, e.target.value)}\n                readOnly={field.adminOnlyEdit && !isAdminMode}\n                rows=\"4\"\n                className={textareaClassName}\n            />\n            {field.copyable && (\n                <div className=\"flex justify-between items-center mt-3 flex-wrap gap-2\">\n                    <button\n                        onClick={() => onCopy(field.value)}\n                        className=\"bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg shadow-md flex items-center justify-center transition-all duration-300\"\n                        title=\"Copier la note complète\"\n                    >\n                        <ClipboardIcon />\n                        Copier Note\n                    </button>\n                    <div className=\"flex flex-wrap gap-2\">\n                        <button\n                            onClick={() => {\n                                const today = new Date().toLocaleDateString('fr-CA', { year: 'numeric', month: '2-digit', day: '2-digit' });\n                                handleQuickAction(`${today}\\n`, MESSAGES.quickAdd.date, true);\n                            }}\n                            className={CSS_CLASSES.button.secondary}\n                            title=\"Ajouter la date actuelle à la note\"\n                        >\n                            + Date\n                        </button>\n                        <button\n                            onClick={() => handleQuickAction(' + Facture', MESSAGES.quickAdd.facture)}\n                            className={CSS_CLASSES.button.secondary}\n                            title=\"Ajouter ' + Facture' à la note\"\n                        >\n                            + Facture\n                        </button>\n                        <button\n                            onClick={() => handleQuickAction(' + Relevé', MESSAGES.quickAdd.releve)}\n                            className={CSS_CLASSES.button.secondary}\n                            title=\"Ajouter ' + Relevé' à la note\"\n                        >\n                            + Relevé\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nTextAreaField.propTypes = {\n    field: PropTypes.object,\n    isAdminMode: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onCopy: PropTypes.func.isRequired,\n    onInsertText: PropTypes.func.isRequired,\n    showNotification: PropTypes.func.isRequired,\n};\n\nconst DetailTacheAdjointe = ({ task = null, onUpdateTask, onAdminModeToggle, isAdminMode, onDeleteTask, showNotification }) => {\n    const [editedTask, setEditedTask] = useState(task || { id: null, name: '', fields: [] });\n    const [procedureCheckStates, setProcedureCheckStates] = useState({});\n\n    useEffect(() => {\n        setEditedTask(task || { id: null, name: '', fields: [] });\n        setProcedureCheckStates({});\n    }, [task]);\n\n    const handleFieldChange = (key, value) => {\n        setEditedTask((prev) => ({\n            ...prev,\n            fields: prev.fields.map((field) =>\n                field.key === key ? { ...field, value: value } : field\n            ),\n        }));\n    };\n\n    // Fonction optimisée pour la copie avec gestion d'erreur améliorée\n    const handleCopy = useCallback(async (text) => {\n        if (navigator.clipboard && window.isSecureContext) {\n            try {\n                await navigator.clipboard.writeText(text);\n                showNotification(MESSAGES.copy.success, 'success');\n            } catch (err) {\n                console.error('Erreur de copie:', err);\n                showNotification(MESSAGES.copy.error, 'error');\n            }\n        } else {\n            // Fallback pour les navigateurs plus anciens ou les contextes non-sécurisés\n            const textarea = document.createElement('textarea');\n            textarea.value = text;\n            textarea.style.position = 'fixed';\n            document.body.appendChild(textarea);\n            textarea.focus();\n            textarea.select();\n            try {\n                // Note: document.execCommand est obsolète mais nécessaire comme fallback\n                document.execCommand('copy');\n                showNotification(MESSAGES.copy.success, 'success');\n            } catch (err) {\n                console.error(MESSAGES.copy.fallbackError, err);\n                showNotification(MESSAGES.copy.error, 'error');\n            } finally {\n                document.body.removeChild(textarea);\n            }\n        }\n    }, [showNotification]);\n\n    const handleSave = useCallback(() => {\n        if (isAdminMode) {\n            onUpdateTask(editedTask);\n            showNotification(MESSAGES.save.success, 'success');\n        } else {\n            showNotification(MESSAGES.save.adminRequired, 'error');\n        }\n    }, [isAdminMode, onUpdateTask, editedTask, showNotification]);\n\n    const insertTextIntoNote = useCallback((textToInsert, prepend = false) => {\n        const noteField = editedTask.fields.find(f => f.key === 'noteTemplate');\n        if (noteField) {\n            const currentValue = noteField.value;\n            const newValue = prepend ? `${textToInsert}${currentValue}` : `${currentValue}${textToInsert}`;\n            handleFieldChange('noteTemplate', newValue);\n        }\n    }, [editedTask.fields]);\n\n    const handleProcedureCheckChange = useCallback((index) => {\n        setProcedureCheckStates(prevStates => ({\n            ...prevStates,\n            [index]: !prevStates[index]\n        }));\n    }, []);\n\n\n    // Extraction des champs avec useMemo pour optimiser les performances\n    const taskFields = useMemo(() => {\n        if (!editedTask?.fields) return {};\n\n        return {\n            modelNumber: editedTask.fields.find(field => field.key === 'modelNumber'),\n            fullTemplateName: editedTask.fields.find(field => field.key === 'fullTemplateName'),\n            attachmentName: editedTask.fields.find(field => field.key === 'attachmentName'),\n            noteTemplate: editedTask.fields.find(field => field.key === 'noteTemplate'),\n            procedure: editedTask.fields.find(field => field.key === 'procedure')\n        };\n    }, [editedTask]);\n\n    // Vérification de l'existence de la tâche\n    if (!task) {\n        return (\n            <div className=\"flex-1 p-8 flex justify-center items-center bg-gray-50 rounded-r-lg\">\n                <p className=\"text-xl text-gray-500\">Sélectionnez une tâche pour voir les détails.</p>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"flex-1 p-8 bg-gray-50 rounded-r-lg shadow-inner overflow-y-auto max-h-[calc(100vh-120px)] scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-50\">\n            <div className=\"flex justify-between items-center mb-6 border-b-2 border-gray-200 pb-4\">\n                <h2 className=\"text-3xl font-extrabold text-blue-700\">{task.name}</h2>\n                <button\n                    onClick={() => onAdminModeToggle(!isAdminMode)}\n                    className={CSS_CLASSES.button.admin}\n                    title={isAdminMode ? 'Quitter Mode Admin' : 'Activer Mode Admin (Édition)'}\n                >\n                    {isAdminMode ? 'Quitter Admin' : 'Mode Admin'}\n                </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 mb-8\">\n                <InputField\n                    field={taskFields.modelNumber}\n                    isAdminMode={isAdminMode}\n                    onChange={handleFieldChange}\n                    onCopy={handleCopy}\n                />\n                <InputField\n                    field={taskFields.fullTemplateName}\n                    isAdminMode={isAdminMode}\n                    onChange={handleFieldChange}\n                    onCopy={handleCopy}\n                />\n            </div>\n\n            <div className=\"mb-8 p-6 bg-white rounded-lg shadow-md\">\n                {taskFields.attachmentName && (\n                    <div className=\"mb-4 w-full\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">{taskFields.attachmentName.label}:</label>\n                        <div className=\"flex items-center space-x-2\">\n                            <input\n                                type=\"text\"\n                                name={taskFields.attachmentName.key}\n                                value={taskFields.attachmentName.value}\n                                onChange={(e) => handleFieldChange(taskFields.attachmentName.key, e.target.value)}\n                                readOnly={taskFields.attachmentName.adminOnlyEdit && !isAdminMode}\n                                className={`flex-grow p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 ${taskFields.attachmentName.adminOnlyEdit && !isAdminMode ? CSS_CLASSES.input.readonly : CSS_CLASSES.input.editable}`}\n                            />\n                            {taskFields.attachmentName.copyable && (\n                                <button\n                                    onClick={() => handleCopy(taskFields.attachmentName.value)}\n                                    className={CSS_CLASSES.button.primary}\n                                    title=\"Copier le nom de la pièce jointe\"\n                                >\n                                    <CopyIcon />\n                                    Copier PJ\n                                </button>\n                            )}\n                        </div>\n                    </div>\n                )}\n                <TextAreaField\n                    field={taskFields.noteTemplate}\n                    isAdminMode={isAdminMode}\n                    onChange={handleFieldChange}\n                    onCopy={handleCopy}\n                    onInsertText={insertTextIntoNote}\n                    showNotification={showNotification}\n                />\n            </div>\n\n            {taskFields.procedure && (() => {\n                let procedureContent;\n                if (isAdminMode) {\n                    procedureContent = (\n                        <textarea\n                            name={taskFields.procedure.key}\n                            value={taskFields.procedure.value}\n                            onChange={(e) => handleFieldChange(taskFields.procedure.key, e.target.value)}\n                            rows=\"8\"\n                            className=\"w-full p-3 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-300 resize-y bg-white\"\n                            placeholder=\"Décrivez ici la procédure complète pour cette tâche (chaque ligne sera une case à cocher si l'option est activée)...\"\n                        ></textarea>\n                    );\n                } else if (taskFields.procedure.hasCheckboxes) {\n                    procedureContent = (\n                        <ul className=\"list-none p-0 m-0 space-y-2\">\n                            {String(taskFields.procedure.value).split('\\n').filter(line => line.trim() !== '').map((line, index) => {\n                                const lineKey = `${taskFields.procedure.key}-${index}-${line.trim()}`;\n                                return (\n                                    <li key={lineKey} className=\"flex items-center text-gray-800\">\n                                        <input\n                                            type=\"checkbox\"\n                                            checked={procedureCheckStates[index] || false}\n                                            onChange={() => handleProcedureCheckChange(index)}\n                                            className=\"mr-2 h-5 w-5 text-blue-600 rounded focus:ring-blue-500\"\n                                        />\n                                        <span className={procedureCheckStates[index] ? 'line-through text-gray-500' : ''}>\n                                            {line.trim()}\n                                        </span>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    );\n                } else {\n                    procedureContent = (\n                        <div className=\"prose max-w-none text-gray-800 whitespace-pre-wrap p-3 border border-gray-200 rounded-lg bg-gray-50\">\n                            {taskFields.procedure.value}\n                        </div>\n                    );\n                }\n                return (\n                    <div className=\"mb-8 p-6 bg-white rounded-lg shadow-md\">\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">{taskFields.procedure.label}:</label>\n                        {procedureContent}\n                    </div>\n                );\n            })()}\n\n            {isAdminMode && (\n                <div className=\"flex space-x-3 mt-4\">\n                    <button\n                        onClick={handleSave}\n                        className={CSS_CLASSES.button.save}\n                    >\n                        Sauvegarder les modifications\n                    </button>\n                    <button\n                        onClick={() => onDeleteTask(task.id)}\n                        className={CSS_CLASSES.button.delete}\n                    >\n                        Supprimer la tâche\n                    </button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nDetailTacheAdjointe.propTypes = {\n    task: PropTypes.object,\n    onUpdateTask: PropTypes.func.isRequired,\n    onAdminModeToggle: PropTypes.func.isRequired,\n    isAdminMode: PropTypes.bool.isRequired,\n    onDeleteTask: PropTypes.func.isRequired,\n    showNotification: PropTypes.func.isRequired,\n};\n\nexport default DetailTacheAdjointe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}