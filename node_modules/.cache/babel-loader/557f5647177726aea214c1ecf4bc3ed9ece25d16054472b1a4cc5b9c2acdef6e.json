{"ast":null,"code":"var _jsxFileName = \"D:\\\\CODE\\\\covalen-app\\\\src\\\\components\\\\DashboardMaison.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardMaison = ({\n  appData,\n  onTabChange,\n  onTaskSelect,\n  onAdminPanel,\n  isAdminMode,\n  onMoveTask,\n  onReorderCategories,\n  onReorderTasksInCategory\n}) => {\n  _s();\n  const [categoryStates, setCategoryStates] = useState({});\n  const [searchTerm, setSearchTerm] = useState('');\n  const [draggedItem, setDraggedItem] = useState(null);\n  const [dragOverCategory, setDragOverCategory] = useState(null);\n\n  // --- Fonctions Drag & Drop Simplifiées ---\n  const handleDragStart = (e, task, category, index) => {\n    console.log('🚀 Drag started:', {\n      task: task.name,\n      category,\n      index\n    });\n\n    // Créer les données de drag\n    const dragData = {\n      taskId: task.id,\n      taskName: task.name,\n      sourceCategory: category,\n      sourceIndex: index,\n      tabName: task.tabName,\n      fullTask: task\n    };\n\n    // Stocker dans dataTransfer ET état local\n    e.dataTransfer.setData('application/json', JSON.stringify(dragData));\n    e.dataTransfer.effectAllowed = 'move';\n\n    // Style visuel pour le drag\n    e.target.style.opacity = '0.6';\n    e.target.style.transform = 'scale(1.02)';\n    setDraggedItem(dragData);\n  };\n  const handleDragEnd = e => {\n    console.log('🏁 Drag ended');\n    e.target.style.opacity = '1';\n    e.target.style.transform = 'scale(1)';\n    setDraggedItem(null);\n    setDragOverCategory(null);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n  };\n  const handleDragEnter = (e, category) => {\n    e.preventDefault();\n    console.log('📥 Drag enter:', category);\n    setDragOverCategory(category);\n  };\n  const handleDragLeave = e => {\n    if (!e.currentTarget.contains(e.relatedTarget)) {\n      setDragOverCategory(null);\n    }\n  };\n  const handleDrop = (e, targetCategory, targetIndex = null) => {\n    e.preventDefault();\n    console.log('🎯 Drop on category:', targetCategory, 'at index:', targetIndex);\n\n    // Récupérer les données\n    let dragData = draggedItem;\n    if (!dragData) {\n      try {\n        const jsonData = e.dataTransfer.getData('application/json');\n        if (jsonData) {\n          dragData = JSON.parse(jsonData);\n          console.log('📦 Retrieved from dataTransfer:', dragData);\n        }\n      } catch (error) {\n        console.log('❌ Error parsing drag data:', error);\n      }\n    }\n    if (!dragData) {\n      console.log('❌ No drag data available');\n      setDragOverCategory(null);\n      return;\n    }\n    const {\n      sourceCategory,\n      sourceIndex,\n      fullTask\n    } = dragData;\n    if (sourceCategory !== targetCategory) {\n      // Déplacer vers une nouvelle catégorie\n      console.log('🔄 Moving task:', sourceCategory, '→', targetCategory);\n      if (onMoveTask && fullTask) {\n        onMoveTask(fullTask, targetCategory);\n        console.log('✅ Task moved successfully');\n      }\n    } else if (targetIndex !== null && sourceIndex !== targetIndex) {\n      // Réorganiser dans la même catégorie\n      console.log('� Reordering task in same category:', sourceIndex, '→', targetIndex);\n      if (onReorderTasksInCategory) {\n        onReorderTasksInCategory(sourceCategory, sourceIndex, targetIndex);\n        console.log('✅ Task reordered successfully');\n      }\n    } else {\n      console.log('🔄 Same position, no action needed');\n    }\n    setDragOverCategory(null);\n    setDraggedItem(null);\n  };\n  const getAllTasksByCategory = () => {\n    const allCategories = {};\n\n    // Parcourir tous les onglets sauf 'Maison' et 'Admin'\n    Object.keys(appData).forEach(tabName => {\n      if (tabName !== 'Maison' && tabName !== 'Admin') {\n        const tasks = appData[tabName] || [];\n        tasks.forEach(task => {\n          const category = task.category || 'Autres';\n          if (!allCategories[category]) {\n            allCategories[category] = [];\n          }\n          allCategories[category].push({\n            ...task,\n            tabName\n          });\n        });\n      }\n    });\n    return allCategories;\n  };\n  const allTasksByCategory = getAllTasksByCategory();\n\n  // Filtrer les tâches selon le terme de recherche\n  const filteredCategories = useMemo(() => {\n    if (!searchTerm) return allTasksByCategory;\n    const filtered = {};\n    const searchLower = searchTerm.toLowerCase();\n    const taskMatchesSearch = task => {\n      var _task$fields, _task$fields$find;\n      const modelNumber = ((_task$fields = task.fields) === null || _task$fields === void 0 ? void 0 : (_task$fields$find = _task$fields.find(f => f.key === 'modelNumber')) === null || _task$fields$find === void 0 ? void 0 : _task$fields$find.value) || '';\n      return task.name.toLowerCase().includes(searchLower) || modelNumber.toLowerCase().includes(searchLower);\n    };\n    Object.keys(allTasksByCategory).forEach(category => {\n      const matchingTasks = allTasksByCategory[category].filter(taskMatchesSearch);\n      const categoryMatches = category.toLowerCase().includes(searchLower);\n      if (matchingTasks.length > 0 || categoryMatches) {\n        filtered[category] = matchingTasks;\n      }\n    });\n    return filtered;\n  }, [allTasksByCategory, searchTerm]);\n  const categorizedTasks = filteredCategories;\n  const handleToggleCategory = (category, event) => {\n    event.stopPropagation();\n    setCategoryStates(prev => ({\n      ...prev,\n      [category]: !prev[category]\n    }));\n  };\n  const handleTaskClick = task => {\n    // Naviguer vers l'onglet et sélectionner la tâche\n    onTabChange(task.tabName);\n    onTaskSelect(task);\n  };\n  const getCategoryIcon = isOpen => {\n    return isOpen ? '▼' : '▶';\n  };\n  const getGoToIcon = () => {\n    return '→';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Covalen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"welcome-message\",\n      children: \"Bienvenue sur votre tableau de bord centralis\\xE9.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), isAdminMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-dashboard-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-banner\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"admin-banner-text\",\n          children: \"Mode Admin Actif sur le Dashboard.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"admin-manage-btn\",\n          onClick: onAdminPanel,\n          children: \"G\\xE9rer les Onglets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this), \"            \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overview-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"overview-title\",\n        children: \"Vue d'overview des T\\xE2ches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-icon\",\n            children: \"\\uD83D\\uDD0D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Rechercher une t\\xE2che, cat\\xE9gorie ou num\\xE9ro...\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            className: \"search-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-clear\",\n            onClick: () => setSearchTerm(''),\n            title: \"Effacer la recherche\",\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-hints\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"search-hint\",\n            children: \"\\uD83D\\uDCA1 Raccourci: Ctrl+/ pour rechercher\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results-info\",\n          children: Object.keys(categorizedTasks).length === 0 ? `Aucun résultat pour \"${searchTerm}\"` : `${Object.values(categorizedTasks).flat().length} résultat(s) trouvé(s)`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tasks-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tasks-label\",\n            children: \"T\\xE2ches\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), Object.keys(categorizedTasks).map(category => {\n          var _categoryStates$categ;\n          const isOpen = (_categoryStates$categ = categoryStates[category]) !== null && _categoryStates$categ !== void 0 ? _categoryStates$categ : true;\n          const tasks = categorizedTasks[category];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `category-section ${dragOverCategory === category ? 'drag-over' : ''}`,\n            onDragOver: handleDragOver,\n            onDragEnter: e => handleDragEnter(e, category),\n            onDragLeave: handleDragLeave,\n            onDrop: e => handleDrop(e, category),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `category-header ${isAdminMode ? 'admin-mode' : ''}`,\n              onClick: e => handleToggleCategory(category, e),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"category-left\",\n                children: [isAdminMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"drag-handle\",\n                  children: \"\\u22EE\\u22EE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-toggle\",\n                  children: getCategoryIcon(isOpen)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"category-name\",\n                  children: category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 41\n                }, this), isAdminMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"task-count\",\n                  children: [\"(\", tasks.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"category-goto\",\n                children: getGoToIcon()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 33\n            }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tasks-list\",\n              children: [tasks.map((task, index) => {\n                var _task$fields2, _task$fields2$find;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-item clickable draggable enhanced-drag\",\n                    draggable: \"true\",\n                    onDragStart: e => handleDragStart(e, task, category, index),\n                    onDragEnd: handleDragEnd,\n                    onClick: () => !draggedItem && handleTaskClick(task),\n                    title: \"\\uD83D\\uDDB1\\uFE0F Glissez cette t\\xE2che vers une autre cat\\xE9gorie\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"drag-handle enhanced-handle\",\n                      title: \"Zone de glissement - Cliquez et glissez\",\n                      children: \"\\u2261\\u2261\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"task-bullet\",\n                      children: \"\\u2022\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"task-name\",\n                      children: [(_task$fields2 = task.fields) === null || _task$fields2 === void 0 ? void 0 : (_task$fields2$find = _task$fields2.find(f => f.key === 'modelNumber')) === null || _task$fields2$find === void 0 ? void 0 : _task$fields2$find.value, \" - \", task.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 49\n                  }, this)\n                }, `task-container-${task.tabName}-${task.id}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 45\n                }, this);\n              }), tasks.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"empty-category-drop-zone\",\n                children: [\"\\uD83D\\uDCC2 Glissez une t\\xE2che ici pour la d\\xE9placer dans \\\"\", category, \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardMaison, \"WVr3RLlrabyZQusJF6IYDuCKeDQ=\");\n_c = DashboardMaison;\nexport default DashboardMaison;\nvar _c;\n$RefreshReg$(_c, \"DashboardMaison\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","DashboardMaison","appData","onTabChange","onTaskSelect","onAdminPanel","isAdminMode","onMoveTask","onReorderCategories","onReorderTasksInCategory","_s","categoryStates","setCategoryStates","searchTerm","setSearchTerm","draggedItem","setDraggedItem","dragOverCategory","setDragOverCategory","handleDragStart","e","task","category","index","console","log","name","dragData","taskId","id","taskName","sourceCategory","sourceIndex","tabName","fullTask","dataTransfer","setData","JSON","stringify","effectAllowed","target","style","opacity","transform","handleDragEnd","handleDragOver","preventDefault","dropEffect","handleDragEnter","handleDragLeave","currentTarget","contains","relatedTarget","handleDrop","targetCategory","targetIndex","jsonData","getData","parse","error","getAllTasksByCategory","allCategories","Object","keys","forEach","tasks","push","allTasksByCategory","filteredCategories","filtered","searchLower","toLowerCase","taskMatchesSearch","_task$fields","_task$fields$find","modelNumber","fields","find","f","key","value","includes","matchingTasks","filter","categoryMatches","length","categorizedTasks","handleToggleCategory","event","stopPropagation","prev","handleTaskClick","getCategoryIcon","isOpen","getGoToIcon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","title","values","flat","map","_categoryStates$categ","onDragOver","onDragEnter","onDragLeave","onDrop","_task$fields2","_task$fields2$find","draggable","onDragStart","onDragEnd","_c","$RefreshReg$"],"sources":["D:/CODE/covalen-app/src/components/DashboardMaison.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\n\nconst DashboardMaison = ({ appData, onTabChange, onTaskSelect, onAdminPanel, isAdminMode, onMoveTask, onReorderCategories, onReorderTasksInCategory }) => {\n    const [categoryStates, setCategoryStates] = useState({});\n    const [searchTerm, setSearchTerm] = useState('');\n    const [draggedItem, setDraggedItem] = useState(null);\n    const [dragOverCategory, setDragOverCategory] = useState(null);\n    \n    // --- Fonctions Drag & Drop Simplifiées ---\n    const handleDragStart = (e, task, category, index) => {\n        console.log('🚀 Drag started:', { task: task.name, category, index });\n        \n        // Créer les données de drag\n        const dragData = {\n            taskId: task.id,\n            taskName: task.name,\n            sourceCategory: category,\n            sourceIndex: index,\n            tabName: task.tabName,\n            fullTask: task\n        };\n        \n        // Stocker dans dataTransfer ET état local\n        e.dataTransfer.setData('application/json', JSON.stringify(dragData));\n        e.dataTransfer.effectAllowed = 'move';\n        \n        // Style visuel pour le drag\n        e.target.style.opacity = '0.6';\n        e.target.style.transform = 'scale(1.02)';\n        \n        setDraggedItem(dragData);\n    };\n\n    const handleDragEnd = (e) => {\n        console.log('🏁 Drag ended');\n        e.target.style.opacity = '1';\n        e.target.style.transform = 'scale(1)';\n        setDraggedItem(null);\n        setDragOverCategory(null);\n    };\n\n    const handleDragOver = (e) => {\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n    };\n\n    const handleDragEnter = (e, category) => {\n        e.preventDefault();\n        console.log('📥 Drag enter:', category);\n        setDragOverCategory(category);\n    };\n\n    const handleDragLeave = (e) => {\n        if (!e.currentTarget.contains(e.relatedTarget)) {\n            setDragOverCategory(null);\n        }\n    };\n\n    const handleDrop = (e, targetCategory, targetIndex = null) => {\n        e.preventDefault();\n        console.log('🎯 Drop on category:', targetCategory, 'at index:', targetIndex);\n        \n        // Récupérer les données\n        let dragData = draggedItem;\n        if (!dragData) {\n            try {\n                const jsonData = e.dataTransfer.getData('application/json');\n                if (jsonData) {\n                    dragData = JSON.parse(jsonData);\n                    console.log('📦 Retrieved from dataTransfer:', dragData);\n                }\n            } catch (error) {\n                console.log('❌ Error parsing drag data:', error);\n            }\n        }\n        \n        if (!dragData) {\n            console.log('❌ No drag data available');\n            setDragOverCategory(null);\n            return;\n        }\n        \n        const { sourceCategory, sourceIndex, fullTask } = dragData;\n        \n        if (sourceCategory !== targetCategory) {\n            // Déplacer vers une nouvelle catégorie\n            console.log('🔄 Moving task:', sourceCategory, '→', targetCategory);\n            if (onMoveTask && fullTask) {\n                onMoveTask(fullTask, targetCategory);\n                console.log('✅ Task moved successfully');\n            }\n        } else if (targetIndex !== null && sourceIndex !== targetIndex) {\n            // Réorganiser dans la même catégorie\n            console.log('� Reordering task in same category:', sourceIndex, '→', targetIndex);\n            if (onReorderTasksInCategory) {\n                onReorderTasksInCategory(sourceCategory, sourceIndex, targetIndex);\n                console.log('✅ Task reordered successfully');\n            }\n        } else {\n            console.log('🔄 Same position, no action needed');\n        }\n        \n        setDragOverCategory(null);\n        setDraggedItem(null);\n    };\n    const getAllTasksByCategory = () => {\n        const allCategories = {};\n\n        // Parcourir tous les onglets sauf 'Maison' et 'Admin'\n        Object.keys(appData).forEach(tabName => {\n            if (tabName !== 'Maison' && tabName !== 'Admin') {\n                const tasks = appData[tabName] || [];\n                tasks.forEach(task => {\n                    const category = task.category || 'Autres';\n                    if (!allCategories[category]) {\n                        allCategories[category] = [];\n                    }\n                    allCategories[category].push({\n                        ...task,\n                        tabName\n                    });\n                });\n            }\n        });\n\n        return allCategories;\n    };\n\n    const allTasksByCategory = getAllTasksByCategory();\n\n    // Filtrer les tâches selon le terme de recherche\n    const filteredCategories = useMemo(() => {\n        if (!searchTerm) return allTasksByCategory;\n\n        const filtered = {};\n        const searchLower = searchTerm.toLowerCase();\n\n        const taskMatchesSearch = (task) => {\n            const modelNumber = task.fields?.find(f => f.key === 'modelNumber')?.value || '';\n            return (\n                task.name.toLowerCase().includes(searchLower) ||\n                modelNumber.toLowerCase().includes(searchLower)\n            );\n        };\n\n        Object.keys(allTasksByCategory).forEach(category => {\n            const matchingTasks = allTasksByCategory[category].filter(taskMatchesSearch);\n            const categoryMatches = category.toLowerCase().includes(searchLower);\n\n            if (matchingTasks.length > 0 || categoryMatches) {\n                filtered[category] = matchingTasks;\n            }\n        });\n\n        return filtered;\n    }, [allTasksByCategory, searchTerm]);\n\n    const categorizedTasks = filteredCategories;\n\n    const handleToggleCategory = (category, event) => {\n        event.stopPropagation();\n        setCategoryStates(prev => ({\n            ...prev,\n            [category]: !prev[category]\n        }));\n    };\n\n    const handleTaskClick = (task) => {\n        // Naviguer vers l'onglet et sélectionner la tâche\n        onTabChange(task.tabName);\n        onTaskSelect(task);\n    };\n\n    const getCategoryIcon = (isOpen) => {\n        return isOpen ? '▼' : '▶';\n    };\n\n    const getGoToIcon = () => {\n        return '→';\n    };\n\n    return (\n        <div className=\"dashboard-container\">\n            {/* En-tête principal */}\n            <div className=\"dashboard-header\">\n                <h1 className=\"dashboard-title\">Covalen</h1>\n            </div>\n\n            {/* Message de bienvenue */}\n            <p className=\"welcome-message\">\n                Bienvenue sur votre tableau de bord centralisé.\n            </p>\n\n            {/* Section Admin - seulement visible en mode admin */}\n            {isAdminMode && (\n                <div className=\"admin-dashboard-section\">\n                    <div className=\"admin-banner\">\n                        <p className=\"admin-banner-text\">Mode Admin Actif sur le Dashboard.</p>\n                        <button className=\"admin-manage-btn\" onClick={onAdminPanel}>\n                            Gérer les Onglets\n                        </button>\n                    </div>\n                </div>\n            )}            {/* Section Vue d'overview */}\n            <div className=\"overview-section\">\n                <h2 className=\"overview-title\">Vue d'overview des Tâches</h2>\n\n                {/* Barre de recherche */}\n                <div className=\"search-container\">\n                    <div className=\"search-bar\">\n                        <span className=\"search-icon\">🔍</span>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Rechercher une tâche, catégorie ou numéro...\"\n                            value={searchTerm}\n                            onChange={(e) => setSearchTerm(e.target.value)}\n                            className=\"search-input\"\n                        />\n                        {searchTerm && (\n                            <button\n                                className=\"search-clear\"\n                                onClick={() => setSearchTerm('')}\n                                title=\"Effacer la recherche\"\n                            >\n                                ✕\n                            </button>\n                        )}\n                    </div>\n                    <div className=\"search-hints\">\n                        <span className=\"search-hint\">💡 Raccourci: Ctrl+/ pour rechercher</span>\n                    </div>\n                    {searchTerm && (\n                        <div className=\"search-results-info\">\n                            {Object.keys(categorizedTasks).length === 0\n                                ? `Aucun résultat pour \"${searchTerm}\"`\n                                : `${Object.values(categorizedTasks).flat().length} résultat(s) trouvé(s)`\n                            }\n                        </div>\n                    )}\n                </div>\n\n                {/* Conteneur des catégories */}\n                <div className=\"categories-container\">\n                    <div className=\"tasks-header\">\n                        <span className=\"tasks-label\">Tâches</span>\n                    </div>\n\n                    {/* Liste des catégories */}\n                    {Object.keys(categorizedTasks).map(category => {\n                        const isOpen = categoryStates[category] ?? true;\n                        const tasks = categorizedTasks[category];\n\n                        return (\n                            <div\n                                key={category}\n                                className={`category-section ${dragOverCategory === category ? 'drag-over' : ''}`}\n                                onDragOver={handleDragOver}\n                                onDragEnter={(e) => handleDragEnter(e, category)}\n                                onDragLeave={handleDragLeave}\n                                onDrop={(e) => handleDrop(e, category)}\n                            >\n                                {/* En-tête de catégorie */}\n                                <div\n                                    className={`category-header ${isAdminMode ? 'admin-mode' : ''}`}\n                                    onClick={(e) => handleToggleCategory(category, e)}\n                                >\n                                    <div className=\"category-left\">\n                                        {isAdminMode && <span className=\"drag-handle\">⋮⋮</span>}\n                                        <span className=\"category-toggle\">\n                                            {getCategoryIcon(isOpen)}\n                                        </span>\n                                        <span className=\"category-name\">{category}</span>\n                                        {isAdminMode && (\n                                            <span className=\"task-count\">({tasks.length})</span>\n                                        )}\n                                    </div>\n                                    <span className=\"category-goto\">{getGoToIcon()}</span>\n                                </div>\n\n                                {/* Liste des tâches (si ouvert) */}\n                                {isOpen && (\n                                    <div className=\"tasks-list\">\n                                        {tasks.map((task, index) => (\n                                            <div key={`task-container-${task.tabName}-${task.id}`}>\n                                                {/* Élément de tâche - Plus facile à attraper */}\n                                                <div\n                                                    className=\"task-item clickable draggable enhanced-drag\"\n                                                    draggable=\"true\"\n                                                    onDragStart={(e) => handleDragStart(e, task, category, index)}\n                                                    onDragEnd={handleDragEnd}\n                                                    onClick={() => !draggedItem && handleTaskClick(task)}\n                                                    title=\"🖱️ Glissez cette tâche vers une autre catégorie\"\n                                                >\n                                                    <span className=\"drag-handle enhanced-handle\" title=\"Zone de glissement - Cliquez et glissez\">\n                                                        ≡≡\n                                                    </span>\n                                                    <span className=\"task-bullet\">•</span>\n                                                    <span className=\"task-name\">\n                                                        {task.fields?.find(f => f.key === 'modelNumber')?.value} - {task.name}\n                                                    </span>\n                                                </div>\n                                            </div>\n                                        ))}\n                                        \n                                        {/* Message pour catégorie vide */}\n                                        {tasks.length === 0 && (\n                                            <div className=\"empty-category-drop-zone\">\n                                                📂 Glissez une tâche ici pour la déplacer dans \"{category}\"\n                                            </div>\n                                        )}\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DashboardMaison;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}